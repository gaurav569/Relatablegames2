{
  "version": "3",
  "log": [
    {
      "Chainlink": {
        "version": {
          "withMetadata": "7621e9f47d5fe41dbbd12f236f8e06c4c92820e90b4232df6a405c44d58df66c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "CBORChainlink",
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkClient": {
        "version": {
          "withMetadata": "a5d7af034267c878f397ea3aedaed8e10d0e31095c844845c9c64f533f6ecce3",
          "withoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0",
          "linkedWithoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0"
        },
        "inherit": [],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "requestCount",
            "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ChainlinkClient",
              "label": "ens",
              "type": "t_contract(ENSInterface)831",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:27"
            },
            {
              "contract": "ChainlinkClient",
              "label": "ensNode",
              "type": "t_bytes32",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:28"
            },
            {
              "contract": "ChainlinkClient",
              "label": "link",
              "type": "t_contract(LinkTokenInterface)926",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:29"
            },
            {
              "contract": "ChainlinkClient",
              "label": "oracle",
              "type": "t_contract(ChainlinkRequestInterface)751",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:30"
            },
            {
              "contract": "ChainlinkClient",
              "label": "requestCount",
              "type": "t_uint256",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
            },
            {
              "contract": "ChainlinkClient",
              "label": "pendingRequests",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:32"
            }
          ],
          "types": {
            "t_contract(ENSInterface)831": {
              "label": "contract ENSInterface"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_contract(LinkTokenInterface)926": {
              "label": "contract LinkTokenInterface"
            },
            "t_contract(ChainlinkRequestInterface)751": {
              "label": "contract ChainlinkRequestInterface"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkRequestInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LinkTokenInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PointerInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BufferChainlink": {
        "version": {
          "withMetadata": "17d637daefa0c36f259c6f73625d378563b03674675486d91fb55c69e2a78be8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CBORChainlink": {
        "version": {
          "withMetadata": "7e5e7faf0a414b45319c58313db04381dcecf4cf331e417cf4c08a6087847e75",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSResolver": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)2551",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)2551": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "c0f7961cf6345476b301f6be20191b4bdbc2727702d7116ecf88cc56b2f0f494",
          "withoutMetadata": "7029d6ce3b0470b92ca7be69b1e8761c6b8053e5d1b953a37f5d02bc2546f82e",
          "linkedWithoutMetadata": "7029d6ce3b0470b92ca7be69b1e8761c6b8053e5d1b953a37f5d02bc2546f82e"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)5355",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:16"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)5450)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:23"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:26"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)3068_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:46"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:48"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)3177_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:83"
            }
          ],
          "types": {
            "t_contract(IERC1155)5355": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)5450)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)5450": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)3068_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)3068_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)3177_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)3177_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "a3fbc3352adc1ba8508e7be13fd6b6fd484a420203b741436f022b21167604c3",
          "withoutMetadata": "a3fbc3352adc1ba8508e7be13fd6b6fd484a420203b741436f022b21167604c3",
          "linkedWithoutMetadata": "a3fbc3352adc1ba8508e7be13fd6b6fd484a420203b741436f022b21167604c3"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)5469_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)5469_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)5469_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)26766_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)26766_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)26501_storage"
                }
              ]
            },
            "t_struct(Set)26501_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Base": {
        "version": {
          "withMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "withoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "linkedWithoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712Base",
            "src": "contracts/sportsdapp/EIP712Base.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Base",
              "label": "domainSeperator",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/EIP712Base.sol:16"
            },
            {
              "contract": "EIP712Base",
              "label": "_chainid",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/EIP712Base.sol:18"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EIP712MetaTxn": {
        "version": {
          "withMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "withoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "linkedWithoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861"
        },
        "inherit": [
          "EIP712Base"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712MetaTxn",
            "src": "contracts/sportsdapp/EIP712MetaTxn.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712MetaTxn",
              "label": "nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/EIP712MetaTxn.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SportsDapp": {
        "version": {
          "withMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e",
          "withoutMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e",
          "linkedWithoutMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e"
        },
        "inherit": [
          "EIP712MetaTxn",
          "EIP712Base",
          "ChainlinkClient",
          "Owned"
        ],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SportsDapp",
            "src": "contracts/sportsdapp/Sportsdapp.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeAddress",
            "src": "contracts/sportsdapp/Sportsdapp.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SportsDapp",
              "label": "feeAddress",
              "type": "t_address_payable",
              "src": "contracts/sportsdapp/Sportsdapp.sol:52"
            },
            {
              "contract": "SportsDapp",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:54"
            },
            {
              "contract": "SportsDapp",
              "label": "questions",
              "type": "t_mapping(t_uint256,t_struct(Question)8492_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:57"
            },
            {
              "contract": "SportsDapp",
              "label": "naam",
              "type": "t_mapping(t_address,t_string_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:59"
            },
            {
              "contract": "SportsDapp",
              "label": "allsubmissions",
              "type": "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8447_storage)dyn_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:63"
            },
            {
              "contract": "SportsDapp",
              "label": "price",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:74"
            },
            {
              "contract": "SportsDapp",
              "label": "oracle",
              "type": "t_address",
              "src": "contracts/sportsdapp/Sportsdapp.sol:76"
            },
            {
              "contract": "SportsDapp",
              "label": "jobId",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/Sportsdapp.sol:77"
            },
            {
              "contract": "SportsDapp",
              "label": "fee",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:78"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Question)8492_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.Question)"
            },
            "t_struct(Question)8492_storage": {
              "label": "struct SportsDapp.Question",
              "members": [
                {
                  "label": "author",
                  "type": "t_address"
                },
                {
                  "label": "_type",
                  "type": "t_uint256"
                },
                {
                  "label": "qcontent",
                  "type": "t_string_storage"
                },
                {
                  "label": "vote_price",
                  "type": "t_uint256"
                },
                {
                  "label": "correct_ans_id",
                  "type": "t_uint256"
                },
                {
                  "label": "options",
                  "type": "t_array(t_struct(Option)8455_storage)6_storage"
                },
                {
                  "label": "totalCount",
                  "type": "t_uint256"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "winnersnames",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "correct_answer_str",
                  "type": "t_string_storage"
                },
                {
                  "label": "correct_ans_reason",
                  "type": "t_string_storage"
                },
                {
                  "label": "distributed_each",
                  "type": "t_uint256"
                },
                {
                  "label": "totalWinners",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint8"
                },
                {
                  "label": "stopped",
                  "type": "t_uint8"
                },
                {
                  "label": "declared_result",
                  "type": "t_uint8"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_struct(Option)8455_storage)6_storage": {
              "label": "struct SportsDapp.Option[6]"
            },
            "t_struct(Option)8455_storage": {
              "label": "struct SportsDapp.Option",
              "members": [
                {
                  "label": "name",
                  "type": "t_uint8"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)"
            },
            "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8447_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.IntegerVoter[])"
            },
            "t_array(t_struct(IntegerVoter)8447_storage)dyn_storage": {
              "label": "struct SportsDapp.IntegerVoter[]"
            },
            "t_struct(IntegerVoter)8447_storage": {
              "label": "struct SportsDapp.IntegerVoter",
              "members": [
                {
                  "label": "add",
                  "type": "t_address"
                },
                {
                  "label": "submittedans",
                  "type": "t_uint256"
                }
              ]
            },
            "t_bytes32": {
              "label": "bytes32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "0a65a511923c748066b6e5dbca108e738da90f365c7ebccf069dd957d77ddb7d",
          "withoutMetadata": "2ca31fb3d4edf34eaf08505d21d69f85ff3173f71b6276d0b812cce46069aabc",
          "linkedWithoutMetadata": "2ca31fb3d4edf34eaf08505d21d69f85ff3173f71b6276d0b812cce46069aabc"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)13593",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)5355",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_tokenBalances",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/synthetix/StakingRewards.sol:38"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:40"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:41"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)5169",
              "src": "contracts/synthetix/StakingRewards.sol:43"
            }
          ],
          "types": {
            "t_contract(IERC20)13593": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)5355": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_contract(IERC1155Game)5169": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)13223_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)13223_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)26450_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)13223_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)13223_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)26450_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)13593",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)13593": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)14347",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)14347": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)15261_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)15261_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)15261_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)25562_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)25562_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25297_storage"
                }
              ]
            },
            "t_struct(Set)25297_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)24686_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)24686_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)24686_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)18282",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)18282": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)18295",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)18295": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)20377_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)20377_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)24686_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)20377_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)20377_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)24686_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)21281",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)21281": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)25683_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)25060_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)25683_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)25683_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25297_storage"
                }
              ]
            },
            "t_struct(Set)25297_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)25060_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)24742_storage"
                }
              ]
            },
            "t_struct(Map)24742_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)24734_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)24734_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)24734_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Chainlink": {
        "version": {
          "withMetadata": "7621e9f47d5fe41dbbd12f236f8e06c4c92820e90b4232df6a405c44d58df66c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "CBORChainlink",
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkClient": {
        "version": {
          "withMetadata": "a5d7af034267c878f397ea3aedaed8e10d0e31095c844845c9c64f533f6ecce3",
          "withoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0",
          "linkedWithoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0"
        },
        "inherit": [],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "requestCount",
            "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ChainlinkClient",
              "label": "ens",
              "type": "t_contract(ENSInterface)831",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:27"
            },
            {
              "contract": "ChainlinkClient",
              "label": "ensNode",
              "type": "t_bytes32",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:28"
            },
            {
              "contract": "ChainlinkClient",
              "label": "link",
              "type": "t_contract(LinkTokenInterface)926",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:29"
            },
            {
              "contract": "ChainlinkClient",
              "label": "oracle",
              "type": "t_contract(ChainlinkRequestInterface)751",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:30"
            },
            {
              "contract": "ChainlinkClient",
              "label": "requestCount",
              "type": "t_uint256",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
            },
            {
              "contract": "ChainlinkClient",
              "label": "pendingRequests",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:32"
            }
          ],
          "types": {
            "t_contract(ENSInterface)831": {
              "label": "contract ENSInterface"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_contract(LinkTokenInterface)926": {
              "label": "contract LinkTokenInterface"
            },
            "t_contract(ChainlinkRequestInterface)751": {
              "label": "contract ChainlinkRequestInterface"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkRequestInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LinkTokenInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PointerInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BufferChainlink": {
        "version": {
          "withMetadata": "17d637daefa0c36f259c6f73625d378563b03674675486d91fb55c69e2a78be8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CBORChainlink": {
        "version": {
          "withMetadata": "7e5e7faf0a414b45319c58313db04381dcecf4cf331e417cf4c08a6087847e75",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSResolver": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)2551",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)2551": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "31bc1e15f6a1db099605bf9b9de3cd422df944848c906dfcef7836a1a60ea760",
          "withoutMetadata": "7029d6ce3b0470b92ca7be69b1e8761c6b8053e5d1b953a37f5d02bc2546f82e",
          "linkedWithoutMetadata": "7029d6ce3b0470b92ca7be69b1e8761c6b8053e5d1b953a37f5d02bc2546f82e"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)5353",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:16"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)5448)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:23"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:26"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)3068_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:46"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:48"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)3177_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:85"
            }
          ],
          "types": {
            "t_contract(IERC1155)5353": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)5448)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)5448": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)3068_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)3068_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)3177_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)3177_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)5467_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)5467_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)5467_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)26764_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)26764_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)26499_storage"
                }
              ]
            },
            "t_struct(Set)26499_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Base": {
        "version": {
          "withMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "withoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "linkedWithoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712Base",
            "src": "contracts/sportsdapp/EIP712Base.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Base",
              "label": "domainSeperator",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/EIP712Base.sol:16"
            },
            {
              "contract": "EIP712Base",
              "label": "_chainid",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/EIP712Base.sol:18"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EIP712MetaTxn": {
        "version": {
          "withMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "withoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "linkedWithoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861"
        },
        "inherit": [
          "EIP712Base"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712MetaTxn",
            "src": "contracts/sportsdapp/EIP712MetaTxn.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712MetaTxn",
              "label": "nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/EIP712MetaTxn.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SportsDapp": {
        "version": {
          "withMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e",
          "withoutMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e",
          "linkedWithoutMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e"
        },
        "inherit": [
          "EIP712MetaTxn",
          "EIP712Base",
          "ChainlinkClient",
          "Owned"
        ],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SportsDapp",
            "src": "contracts/sportsdapp/Sportsdapp.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeAddress",
            "src": "contracts/sportsdapp/Sportsdapp.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SportsDapp",
              "label": "feeAddress",
              "type": "t_address_payable",
              "src": "contracts/sportsdapp/Sportsdapp.sol:52"
            },
            {
              "contract": "SportsDapp",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:54"
            },
            {
              "contract": "SportsDapp",
              "label": "questions",
              "type": "t_mapping(t_uint256,t_struct(Question)8490_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:57"
            },
            {
              "contract": "SportsDapp",
              "label": "naam",
              "type": "t_mapping(t_address,t_string_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:59"
            },
            {
              "contract": "SportsDapp",
              "label": "allsubmissions",
              "type": "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8445_storage)dyn_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:63"
            },
            {
              "contract": "SportsDapp",
              "label": "price",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:74"
            },
            {
              "contract": "SportsDapp",
              "label": "oracle",
              "type": "t_address",
              "src": "contracts/sportsdapp/Sportsdapp.sol:76"
            },
            {
              "contract": "SportsDapp",
              "label": "jobId",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/Sportsdapp.sol:77"
            },
            {
              "contract": "SportsDapp",
              "label": "fee",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:78"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Question)8490_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.Question)"
            },
            "t_struct(Question)8490_storage": {
              "label": "struct SportsDapp.Question",
              "members": [
                {
                  "label": "author",
                  "type": "t_address"
                },
                {
                  "label": "_type",
                  "type": "t_uint256"
                },
                {
                  "label": "qcontent",
                  "type": "t_string_storage"
                },
                {
                  "label": "vote_price",
                  "type": "t_uint256"
                },
                {
                  "label": "correct_ans_id",
                  "type": "t_uint256"
                },
                {
                  "label": "options",
                  "type": "t_array(t_struct(Option)8453_storage)6_storage"
                },
                {
                  "label": "totalCount",
                  "type": "t_uint256"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "winnersnames",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "correct_answer_str",
                  "type": "t_string_storage"
                },
                {
                  "label": "correct_ans_reason",
                  "type": "t_string_storage"
                },
                {
                  "label": "distributed_each",
                  "type": "t_uint256"
                },
                {
                  "label": "totalWinners",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint8"
                },
                {
                  "label": "stopped",
                  "type": "t_uint8"
                },
                {
                  "label": "declared_result",
                  "type": "t_uint8"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_struct(Option)8453_storage)6_storage": {
              "label": "struct SportsDapp.Option[6]"
            },
            "t_struct(Option)8453_storage": {
              "label": "struct SportsDapp.Option",
              "members": [
                {
                  "label": "name",
                  "type": "t_uint8"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)"
            },
            "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8445_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.IntegerVoter[])"
            },
            "t_array(t_struct(IntegerVoter)8445_storage)dyn_storage": {
              "label": "struct SportsDapp.IntegerVoter[]"
            },
            "t_struct(IntegerVoter)8445_storage": {
              "label": "struct SportsDapp.IntegerVoter",
              "members": [
                {
                  "label": "add",
                  "type": "t_address"
                },
                {
                  "label": "submittedans",
                  "type": "t_uint256"
                }
              ]
            },
            "t_bytes32": {
              "label": "bytes32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "0a65a511923c748066b6e5dbca108e738da90f365c7ebccf069dd957d77ddb7d",
          "withoutMetadata": "2ca31fb3d4edf34eaf08505d21d69f85ff3173f71b6276d0b812cce46069aabc",
          "linkedWithoutMetadata": "2ca31fb3d4edf34eaf08505d21d69f85ff3173f71b6276d0b812cce46069aabc"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)13591",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)5353",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_tokenBalances",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/synthetix/StakingRewards.sol:38"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:40"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:41"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)5167",
              "src": "contracts/synthetix/StakingRewards.sol:43"
            }
          ],
          "types": {
            "t_contract(IERC20)13591": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)5353": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_contract(IERC1155Game)5167": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)13221_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)13221_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)26448_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)13221_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)13221_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)26448_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)13591",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)13591": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)14345",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)14345": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)15259_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)15259_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)15259_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)25560_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)25560_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25295_storage"
                }
              ]
            },
            "t_struct(Set)25295_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)24684_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)24684_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)24684_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)18280",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)18280": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)18293",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)18293": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)20375_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)20375_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)24684_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)20375_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)20375_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)24684_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)21279",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)21279": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)25681_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)25058_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)25681_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)25681_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25295_storage"
                }
              ]
            },
            "t_struct(Set)25295_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)25058_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)24740_storage"
                }
              ]
            },
            "t_struct(Map)24740_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)24732_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)24732_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)24732_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Chainlink": {
        "version": {
          "withMetadata": "7621e9f47d5fe41dbbd12f236f8e06c4c92820e90b4232df6a405c44d58df66c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "CBORChainlink",
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkClient": {
        "version": {
          "withMetadata": "a5d7af034267c878f397ea3aedaed8e10d0e31095c844845c9c64f533f6ecce3",
          "withoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0",
          "linkedWithoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0"
        },
        "inherit": [],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "requestCount",
            "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ChainlinkClient",
              "label": "ens",
              "type": "t_contract(ENSInterface)831",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:27"
            },
            {
              "contract": "ChainlinkClient",
              "label": "ensNode",
              "type": "t_bytes32",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:28"
            },
            {
              "contract": "ChainlinkClient",
              "label": "link",
              "type": "t_contract(LinkTokenInterface)926",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:29"
            },
            {
              "contract": "ChainlinkClient",
              "label": "oracle",
              "type": "t_contract(ChainlinkRequestInterface)751",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:30"
            },
            {
              "contract": "ChainlinkClient",
              "label": "requestCount",
              "type": "t_uint256",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
            },
            {
              "contract": "ChainlinkClient",
              "label": "pendingRequests",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:32"
            }
          ],
          "types": {
            "t_contract(ENSInterface)831": {
              "label": "contract ENSInterface"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_contract(LinkTokenInterface)926": {
              "label": "contract LinkTokenInterface"
            },
            "t_contract(ChainlinkRequestInterface)751": {
              "label": "contract ChainlinkRequestInterface"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkRequestInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LinkTokenInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PointerInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BufferChainlink": {
        "version": {
          "withMetadata": "17d637daefa0c36f259c6f73625d378563b03674675486d91fb55c69e2a78be8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CBORChainlink": {
        "version": {
          "withMetadata": "7e5e7faf0a414b45319c58313db04381dcecf4cf331e417cf4c08a6087847e75",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSResolver": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)2551",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)2551": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "e5f9cf61b088288eb423da62874a9621dd0dd74037858fbba475888d881667fc",
          "withoutMetadata": "e8ead72da2f31755801e0d81e0a4784a9b82abde8a40d6c68acecf95feba2524",
          "linkedWithoutMetadata": "e8ead72da2f31755801e0d81e0a4784a9b82abde8a40d6c68acecf95feba2524"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)5345",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:16"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)5440)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:23"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:26"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)3068_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:46"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:48"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)3177_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:85"
            }
          ],
          "types": {
            "t_contract(IERC1155)5345": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)5440)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)5440": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)3068_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)3068_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)3177_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)3177_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)5459_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)5459_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)5459_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)26756_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)26756_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)26491_storage"
                }
              ]
            },
            "t_struct(Set)26491_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Base": {
        "version": {
          "withMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "withoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "linkedWithoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712Base",
            "src": "contracts/sportsdapp/EIP712Base.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Base",
              "label": "domainSeperator",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/EIP712Base.sol:16"
            },
            {
              "contract": "EIP712Base",
              "label": "_chainid",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/EIP712Base.sol:18"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EIP712MetaTxn": {
        "version": {
          "withMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "withoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "linkedWithoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861"
        },
        "inherit": [
          "EIP712Base"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712MetaTxn",
            "src": "contracts/sportsdapp/EIP712MetaTxn.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712MetaTxn",
              "label": "nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/EIP712MetaTxn.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SportsDapp": {
        "version": {
          "withMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e",
          "withoutMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e",
          "linkedWithoutMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e"
        },
        "inherit": [
          "EIP712MetaTxn",
          "EIP712Base",
          "ChainlinkClient",
          "Owned"
        ],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SportsDapp",
            "src": "contracts/sportsdapp/Sportsdapp.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeAddress",
            "src": "contracts/sportsdapp/Sportsdapp.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SportsDapp",
              "label": "feeAddress",
              "type": "t_address_payable",
              "src": "contracts/sportsdapp/Sportsdapp.sol:52"
            },
            {
              "contract": "SportsDapp",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:54"
            },
            {
              "contract": "SportsDapp",
              "label": "questions",
              "type": "t_mapping(t_uint256,t_struct(Question)8482_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:57"
            },
            {
              "contract": "SportsDapp",
              "label": "naam",
              "type": "t_mapping(t_address,t_string_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:59"
            },
            {
              "contract": "SportsDapp",
              "label": "allsubmissions",
              "type": "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8437_storage)dyn_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:63"
            },
            {
              "contract": "SportsDapp",
              "label": "price",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:74"
            },
            {
              "contract": "SportsDapp",
              "label": "oracle",
              "type": "t_address",
              "src": "contracts/sportsdapp/Sportsdapp.sol:76"
            },
            {
              "contract": "SportsDapp",
              "label": "jobId",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/Sportsdapp.sol:77"
            },
            {
              "contract": "SportsDapp",
              "label": "fee",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:78"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Question)8482_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.Question)"
            },
            "t_struct(Question)8482_storage": {
              "label": "struct SportsDapp.Question",
              "members": [
                {
                  "label": "author",
                  "type": "t_address"
                },
                {
                  "label": "_type",
                  "type": "t_uint256"
                },
                {
                  "label": "qcontent",
                  "type": "t_string_storage"
                },
                {
                  "label": "vote_price",
                  "type": "t_uint256"
                },
                {
                  "label": "correct_ans_id",
                  "type": "t_uint256"
                },
                {
                  "label": "options",
                  "type": "t_array(t_struct(Option)8445_storage)6_storage"
                },
                {
                  "label": "totalCount",
                  "type": "t_uint256"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "winnersnames",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "correct_answer_str",
                  "type": "t_string_storage"
                },
                {
                  "label": "correct_ans_reason",
                  "type": "t_string_storage"
                },
                {
                  "label": "distributed_each",
                  "type": "t_uint256"
                },
                {
                  "label": "totalWinners",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint8"
                },
                {
                  "label": "stopped",
                  "type": "t_uint8"
                },
                {
                  "label": "declared_result",
                  "type": "t_uint8"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_struct(Option)8445_storage)6_storage": {
              "label": "struct SportsDapp.Option[6]"
            },
            "t_struct(Option)8445_storage": {
              "label": "struct SportsDapp.Option",
              "members": [
                {
                  "label": "name",
                  "type": "t_uint8"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)"
            },
            "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8437_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.IntegerVoter[])"
            },
            "t_array(t_struct(IntegerVoter)8437_storage)dyn_storage": {
              "label": "struct SportsDapp.IntegerVoter[]"
            },
            "t_struct(IntegerVoter)8437_storage": {
              "label": "struct SportsDapp.IntegerVoter",
              "members": [
                {
                  "label": "add",
                  "type": "t_address"
                },
                {
                  "label": "submittedans",
                  "type": "t_uint256"
                }
              ]
            },
            "t_bytes32": {
              "label": "bytes32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "0a65a511923c748066b6e5dbca108e738da90f365c7ebccf069dd957d77ddb7d",
          "withoutMetadata": "2ca31fb3d4edf34eaf08505d21d69f85ff3173f71b6276d0b812cce46069aabc",
          "linkedWithoutMetadata": "2ca31fb3d4edf34eaf08505d21d69f85ff3173f71b6276d0b812cce46069aabc"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)13583",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)5345",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_tokenBalances",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/synthetix/StakingRewards.sol:38"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:40"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:41"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)5159",
              "src": "contracts/synthetix/StakingRewards.sol:43"
            }
          ],
          "types": {
            "t_contract(IERC20)13583": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)5345": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_contract(IERC1155Game)5159": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)13213_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)13213_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)26440_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)13213_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)13213_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)26440_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)13583",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)13583": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)14337",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)14337": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)15251_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)15251_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)15251_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)25552_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)25552_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25287_storage"
                }
              ]
            },
            "t_struct(Set)25287_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)24676_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)24676_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)24676_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)18272",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)18272": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)18285",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)18285": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)20367_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)20367_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)24676_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)20367_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)20367_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)24676_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)21271",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)21271": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)25673_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)25050_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)25673_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)25673_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25287_storage"
                }
              ]
            },
            "t_struct(Set)25287_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)25050_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)24732_storage"
                }
              ]
            },
            "t_struct(Map)24732_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)24724_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)24724_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)24724_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Chainlink": {
        "version": {
          "withMetadata": "7621e9f47d5fe41dbbd12f236f8e06c4c92820e90b4232df6a405c44d58df66c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "CBORChainlink",
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkClient": {
        "version": {
          "withMetadata": "a5d7af034267c878f397ea3aedaed8e10d0e31095c844845c9c64f533f6ecce3",
          "withoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0",
          "linkedWithoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0"
        },
        "inherit": [],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "requestCount",
            "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ChainlinkClient",
              "label": "ens",
              "type": "t_contract(ENSInterface)831",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:27"
            },
            {
              "contract": "ChainlinkClient",
              "label": "ensNode",
              "type": "t_bytes32",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:28"
            },
            {
              "contract": "ChainlinkClient",
              "label": "link",
              "type": "t_contract(LinkTokenInterface)926",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:29"
            },
            {
              "contract": "ChainlinkClient",
              "label": "oracle",
              "type": "t_contract(ChainlinkRequestInterface)751",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:30"
            },
            {
              "contract": "ChainlinkClient",
              "label": "requestCount",
              "type": "t_uint256",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
            },
            {
              "contract": "ChainlinkClient",
              "label": "pendingRequests",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:32"
            }
          ],
          "types": {
            "t_contract(ENSInterface)831": {
              "label": "contract ENSInterface"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_contract(LinkTokenInterface)926": {
              "label": "contract LinkTokenInterface"
            },
            "t_contract(ChainlinkRequestInterface)751": {
              "label": "contract ChainlinkRequestInterface"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkRequestInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LinkTokenInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PointerInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BufferChainlink": {
        "version": {
          "withMetadata": "17d637daefa0c36f259c6f73625d378563b03674675486d91fb55c69e2a78be8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CBORChainlink": {
        "version": {
          "withMetadata": "7e5e7faf0a414b45319c58313db04381dcecf4cf331e417cf4c08a6087847e75",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSResolver": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)2551",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)2551": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "878cacf82a28fcd542f26645f7d465608bb15db4e19800a151c40fe2783089c5",
          "withoutMetadata": "36226fbd767438d1fed8151ab1cf3b470f138e04d3ddd88520d478744c7af69a",
          "linkedWithoutMetadata": "36226fbd767438d1fed8151ab1cf3b470f138e04d3ddd88520d478744c7af69a"
        },
        "inherit": [
          "ReentrancyGuard",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)5345",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:16"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)5440)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:23"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:26"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)3068_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:46"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:48"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)3177_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:85"
            }
          ],
          "types": {
            "t_contract(IERC1155)5345": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)5440)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)5440": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)3068_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)3068_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)3177_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)3177_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)5459_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)5459_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)5459_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)26756_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)26756_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)26491_storage"
                }
              ]
            },
            "t_struct(Set)26491_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Base": {
        "version": {
          "withMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "withoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "linkedWithoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712Base",
            "src": "contracts/sportsdapp/EIP712Base.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Base",
              "label": "domainSeperator",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/EIP712Base.sol:16"
            },
            {
              "contract": "EIP712Base",
              "label": "_chainid",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/EIP712Base.sol:18"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EIP712MetaTxn": {
        "version": {
          "withMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "withoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "linkedWithoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861"
        },
        "inherit": [
          "EIP712Base"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712MetaTxn",
            "src": "contracts/sportsdapp/EIP712MetaTxn.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712MetaTxn",
              "label": "nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/EIP712MetaTxn.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SportsDapp": {
        "version": {
          "withMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e",
          "withoutMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e",
          "linkedWithoutMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e"
        },
        "inherit": [
          "EIP712MetaTxn",
          "EIP712Base",
          "ChainlinkClient",
          "Owned"
        ],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SportsDapp",
            "src": "contracts/sportsdapp/Sportsdapp.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeAddress",
            "src": "contracts/sportsdapp/Sportsdapp.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SportsDapp",
              "label": "feeAddress",
              "type": "t_address_payable",
              "src": "contracts/sportsdapp/Sportsdapp.sol:52"
            },
            {
              "contract": "SportsDapp",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:54"
            },
            {
              "contract": "SportsDapp",
              "label": "questions",
              "type": "t_mapping(t_uint256,t_struct(Question)8482_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:57"
            },
            {
              "contract": "SportsDapp",
              "label": "naam",
              "type": "t_mapping(t_address,t_string_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:59"
            },
            {
              "contract": "SportsDapp",
              "label": "allsubmissions",
              "type": "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8437_storage)dyn_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:63"
            },
            {
              "contract": "SportsDapp",
              "label": "price",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:74"
            },
            {
              "contract": "SportsDapp",
              "label": "oracle",
              "type": "t_address",
              "src": "contracts/sportsdapp/Sportsdapp.sol:76"
            },
            {
              "contract": "SportsDapp",
              "label": "jobId",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/Sportsdapp.sol:77"
            },
            {
              "contract": "SportsDapp",
              "label": "fee",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:78"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Question)8482_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.Question)"
            },
            "t_struct(Question)8482_storage": {
              "label": "struct SportsDapp.Question",
              "members": [
                {
                  "label": "author",
                  "type": "t_address"
                },
                {
                  "label": "_type",
                  "type": "t_uint256"
                },
                {
                  "label": "qcontent",
                  "type": "t_string_storage"
                },
                {
                  "label": "vote_price",
                  "type": "t_uint256"
                },
                {
                  "label": "correct_ans_id",
                  "type": "t_uint256"
                },
                {
                  "label": "options",
                  "type": "t_array(t_struct(Option)8445_storage)6_storage"
                },
                {
                  "label": "totalCount",
                  "type": "t_uint256"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "winnersnames",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "correct_answer_str",
                  "type": "t_string_storage"
                },
                {
                  "label": "correct_ans_reason",
                  "type": "t_string_storage"
                },
                {
                  "label": "distributed_each",
                  "type": "t_uint256"
                },
                {
                  "label": "totalWinners",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint8"
                },
                {
                  "label": "stopped",
                  "type": "t_uint8"
                },
                {
                  "label": "declared_result",
                  "type": "t_uint8"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_struct(Option)8445_storage)6_storage": {
              "label": "struct SportsDapp.Option[6]"
            },
            "t_struct(Option)8445_storage": {
              "label": "struct SportsDapp.Option",
              "members": [
                {
                  "label": "name",
                  "type": "t_uint8"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)"
            },
            "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8437_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.IntegerVoter[])"
            },
            "t_array(t_struct(IntegerVoter)8437_storage)dyn_storage": {
              "label": "struct SportsDapp.IntegerVoter[]"
            },
            "t_struct(IntegerVoter)8437_storage": {
              "label": "struct SportsDapp.IntegerVoter",
              "members": [
                {
                  "label": "add",
                  "type": "t_address"
                },
                {
                  "label": "submittedans",
                  "type": "t_uint256"
                }
              ]
            },
            "t_bytes32": {
              "label": "bytes32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "0a65a511923c748066b6e5dbca108e738da90f365c7ebccf069dd957d77ddb7d",
          "withoutMetadata": "2ca31fb3d4edf34eaf08505d21d69f85ff3173f71b6276d0b812cce46069aabc",
          "linkedWithoutMetadata": "2ca31fb3d4edf34eaf08505d21d69f85ff3173f71b6276d0b812cce46069aabc"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)13583",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)5345",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_tokenBalances",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/synthetix/StakingRewards.sol:38"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:40"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:41"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)5159",
              "src": "contracts/synthetix/StakingRewards.sol:43"
            }
          ],
          "types": {
            "t_contract(IERC20)13583": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)5345": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_contract(IERC1155Game)5159": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)13213_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)13213_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)26440_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)13213_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)13213_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)26440_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)13583",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)13583": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)14337",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)14337": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)15251_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)15251_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)15251_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)25552_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)25552_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25287_storage"
                }
              ]
            },
            "t_struct(Set)25287_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)24676_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)24676_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)24676_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)18272",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)18272": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)18285",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)18285": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)20367_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)20367_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)24676_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)20367_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)20367_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)24676_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)21271",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)21271": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)25673_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)25050_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)25673_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)25673_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25287_storage"
                }
              ]
            },
            "t_struct(Set)25287_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)25050_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)24732_storage"
                }
              ]
            },
            "t_struct(Map)24732_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)24724_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)24724_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)24724_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Chainlink": {
        "version": {
          "withMetadata": "7621e9f47d5fe41dbbd12f236f8e06c4c92820e90b4232df6a405c44d58df66c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "CBORChainlink",
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkClient": {
        "version": {
          "withMetadata": "a5d7af034267c878f397ea3aedaed8e10d0e31095c844845c9c64f533f6ecce3",
          "withoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0",
          "linkedWithoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0"
        },
        "inherit": [],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "requestCount",
            "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ChainlinkClient",
              "label": "ens",
              "type": "t_contract(ENSInterface)831",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:27"
            },
            {
              "contract": "ChainlinkClient",
              "label": "ensNode",
              "type": "t_bytes32",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:28"
            },
            {
              "contract": "ChainlinkClient",
              "label": "link",
              "type": "t_contract(LinkTokenInterface)926",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:29"
            },
            {
              "contract": "ChainlinkClient",
              "label": "oracle",
              "type": "t_contract(ChainlinkRequestInterface)751",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:30"
            },
            {
              "contract": "ChainlinkClient",
              "label": "requestCount",
              "type": "t_uint256",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
            },
            {
              "contract": "ChainlinkClient",
              "label": "pendingRequests",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:32"
            }
          ],
          "types": {
            "t_contract(ENSInterface)831": {
              "label": "contract ENSInterface"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_contract(LinkTokenInterface)926": {
              "label": "contract LinkTokenInterface"
            },
            "t_contract(ChainlinkRequestInterface)751": {
              "label": "contract ChainlinkRequestInterface"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkRequestInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LinkTokenInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PointerInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BufferChainlink": {
        "version": {
          "withMetadata": "17d637daefa0c36f259c6f73625d378563b03674675486d91fb55c69e2a78be8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CBORChainlink": {
        "version": {
          "withMetadata": "7e5e7faf0a414b45319c58313db04381dcecf4cf331e417cf4c08a6087847e75",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSResolver": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)2551",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)2551": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "1526e6b3b8d81c6a6cd9c6a1a547491cd91183a6c0c990a9f35ece146fa2f4f8",
          "withoutMetadata": "1f641b8bd4c59cf6c1b411c1550ce3248e2f58b5ff645dec255ed708f13e9eda",
          "linkedWithoutMetadata": "1f641b8bd4c59cf6c1b411c1550ce3248e2f58b5ff645dec255ed708f13e9eda"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)5340",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:15"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)5435)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:22"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:25"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)3065_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:44"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:47"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)3174_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:83"
            }
          ],
          "types": {
            "t_contract(IERC1155)5340": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)5435)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)5435": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)3065_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)3065_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)3174_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)3174_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)5454_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)5454_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)5454_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)26751_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)26751_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)26486_storage"
                }
              ]
            },
            "t_struct(Set)26486_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Base": {
        "version": {
          "withMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "withoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "linkedWithoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712Base",
            "src": "contracts/sportsdapp/EIP712Base.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Base",
              "label": "domainSeperator",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/EIP712Base.sol:16"
            },
            {
              "contract": "EIP712Base",
              "label": "_chainid",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/EIP712Base.sol:18"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EIP712MetaTxn": {
        "version": {
          "withMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "withoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "linkedWithoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861"
        },
        "inherit": [
          "EIP712Base"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712MetaTxn",
            "src": "contracts/sportsdapp/EIP712MetaTxn.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712MetaTxn",
              "label": "nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/EIP712MetaTxn.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SportsDapp": {
        "version": {
          "withMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e",
          "withoutMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e",
          "linkedWithoutMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e"
        },
        "inherit": [
          "EIP712MetaTxn",
          "EIP712Base",
          "ChainlinkClient",
          "Owned"
        ],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SportsDapp",
            "src": "contracts/sportsdapp/Sportsdapp.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeAddress",
            "src": "contracts/sportsdapp/Sportsdapp.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SportsDapp",
              "label": "feeAddress",
              "type": "t_address_payable",
              "src": "contracts/sportsdapp/Sportsdapp.sol:52"
            },
            {
              "contract": "SportsDapp",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:54"
            },
            {
              "contract": "SportsDapp",
              "label": "questions",
              "type": "t_mapping(t_uint256,t_struct(Question)8477_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:57"
            },
            {
              "contract": "SportsDapp",
              "label": "naam",
              "type": "t_mapping(t_address,t_string_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:59"
            },
            {
              "contract": "SportsDapp",
              "label": "allsubmissions",
              "type": "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8432_storage)dyn_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:63"
            },
            {
              "contract": "SportsDapp",
              "label": "price",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:74"
            },
            {
              "contract": "SportsDapp",
              "label": "oracle",
              "type": "t_address",
              "src": "contracts/sportsdapp/Sportsdapp.sol:76"
            },
            {
              "contract": "SportsDapp",
              "label": "jobId",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/Sportsdapp.sol:77"
            },
            {
              "contract": "SportsDapp",
              "label": "fee",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:78"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Question)8477_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.Question)"
            },
            "t_struct(Question)8477_storage": {
              "label": "struct SportsDapp.Question",
              "members": [
                {
                  "label": "author",
                  "type": "t_address"
                },
                {
                  "label": "_type",
                  "type": "t_uint256"
                },
                {
                  "label": "qcontent",
                  "type": "t_string_storage"
                },
                {
                  "label": "vote_price",
                  "type": "t_uint256"
                },
                {
                  "label": "correct_ans_id",
                  "type": "t_uint256"
                },
                {
                  "label": "options",
                  "type": "t_array(t_struct(Option)8440_storage)6_storage"
                },
                {
                  "label": "totalCount",
                  "type": "t_uint256"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "winnersnames",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "correct_answer_str",
                  "type": "t_string_storage"
                },
                {
                  "label": "correct_ans_reason",
                  "type": "t_string_storage"
                },
                {
                  "label": "distributed_each",
                  "type": "t_uint256"
                },
                {
                  "label": "totalWinners",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint8"
                },
                {
                  "label": "stopped",
                  "type": "t_uint8"
                },
                {
                  "label": "declared_result",
                  "type": "t_uint8"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_struct(Option)8440_storage)6_storage": {
              "label": "struct SportsDapp.Option[6]"
            },
            "t_struct(Option)8440_storage": {
              "label": "struct SportsDapp.Option",
              "members": [
                {
                  "label": "name",
                  "type": "t_uint8"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)"
            },
            "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8432_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.IntegerVoter[])"
            },
            "t_array(t_struct(IntegerVoter)8432_storage)dyn_storage": {
              "label": "struct SportsDapp.IntegerVoter[]"
            },
            "t_struct(IntegerVoter)8432_storage": {
              "label": "struct SportsDapp.IntegerVoter",
              "members": [
                {
                  "label": "add",
                  "type": "t_address"
                },
                {
                  "label": "submittedans",
                  "type": "t_uint256"
                }
              ]
            },
            "t_bytes32": {
              "label": "bytes32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "0a65a511923c748066b6e5dbca108e738da90f365c7ebccf069dd957d77ddb7d",
          "withoutMetadata": "2ca31fb3d4edf34eaf08505d21d69f85ff3173f71b6276d0b812cce46069aabc",
          "linkedWithoutMetadata": "2ca31fb3d4edf34eaf08505d21d69f85ff3173f71b6276d0b812cce46069aabc"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)13578",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)5340",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_tokenBalances",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/synthetix/StakingRewards.sol:38"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:40"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:41"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)5154",
              "src": "contracts/synthetix/StakingRewards.sol:43"
            }
          ],
          "types": {
            "t_contract(IERC20)13578": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)5340": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_contract(IERC1155Game)5154": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)13208_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)13208_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)26435_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)13208_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)13208_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)26435_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)13578",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)13578": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)14332",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)14332": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)15246_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)15246_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)15246_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)25547_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)25547_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25282_storage"
                }
              ]
            },
            "t_struct(Set)25282_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)24671_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)24671_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)24671_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)18267",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)18267": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)18280",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)18280": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)20362_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)20362_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)24671_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)20362_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)20362_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)24671_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)21266",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)21266": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)25668_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)25045_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)25668_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)25668_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25282_storage"
                }
              ]
            },
            "t_struct(Set)25282_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)25045_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)24727_storage"
                }
              ]
            },
            "t_struct(Map)24727_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)24719_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)24719_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)24719_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Chainlink": {
        "version": {
          "withMetadata": "7621e9f47d5fe41dbbd12f236f8e06c4c92820e90b4232df6a405c44d58df66c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "CBORChainlink",
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkClient": {
        "version": {
          "withMetadata": "a5d7af034267c878f397ea3aedaed8e10d0e31095c844845c9c64f533f6ecce3",
          "withoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0",
          "linkedWithoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0"
        },
        "inherit": [],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "requestCount",
            "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ChainlinkClient",
              "label": "ens",
              "type": "t_contract(ENSInterface)831",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:27"
            },
            {
              "contract": "ChainlinkClient",
              "label": "ensNode",
              "type": "t_bytes32",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:28"
            },
            {
              "contract": "ChainlinkClient",
              "label": "link",
              "type": "t_contract(LinkTokenInterface)926",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:29"
            },
            {
              "contract": "ChainlinkClient",
              "label": "oracle",
              "type": "t_contract(ChainlinkRequestInterface)751",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:30"
            },
            {
              "contract": "ChainlinkClient",
              "label": "requestCount",
              "type": "t_uint256",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
            },
            {
              "contract": "ChainlinkClient",
              "label": "pendingRequests",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:32"
            }
          ],
          "types": {
            "t_contract(ENSInterface)831": {
              "label": "contract ENSInterface"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_contract(LinkTokenInterface)926": {
              "label": "contract LinkTokenInterface"
            },
            "t_contract(ChainlinkRequestInterface)751": {
              "label": "contract ChainlinkRequestInterface"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkRequestInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LinkTokenInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PointerInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BufferChainlink": {
        "version": {
          "withMetadata": "17d637daefa0c36f259c6f73625d378563b03674675486d91fb55c69e2a78be8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CBORChainlink": {
        "version": {
          "withMetadata": "7e5e7faf0a414b45319c58313db04381dcecf4cf331e417cf4c08a6087847e75",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSResolver": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)2551",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)2551": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "1526e6b3b8d81c6a6cd9c6a1a547491cd91183a6c0c990a9f35ece146fa2f4f8",
          "withoutMetadata": "1f641b8bd4c59cf6c1b411c1550ce3248e2f58b5ff645dec255ed708f13e9eda",
          "linkedWithoutMetadata": "1f641b8bd4c59cf6c1b411c1550ce3248e2f58b5ff645dec255ed708f13e9eda"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)5340",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:15"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)5435)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:22"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:25"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)3065_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:44"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:47"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)3174_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:83"
            }
          ],
          "types": {
            "t_contract(IERC1155)5340": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)5435)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)5435": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)3065_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)3065_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)3174_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)3174_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)5454_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)5454_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)5454_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)26743_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)26743_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)26478_storage"
                }
              ]
            },
            "t_struct(Set)26478_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Base": {
        "version": {
          "withMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "withoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "linkedWithoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712Base",
            "src": "contracts/sportsdapp/EIP712Base.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Base",
              "label": "domainSeperator",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/EIP712Base.sol:16"
            },
            {
              "contract": "EIP712Base",
              "label": "_chainid",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/EIP712Base.sol:18"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EIP712MetaTxn": {
        "version": {
          "withMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "withoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "linkedWithoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861"
        },
        "inherit": [
          "EIP712Base"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712MetaTxn",
            "src": "contracts/sportsdapp/EIP712MetaTxn.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712MetaTxn",
              "label": "nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/EIP712MetaTxn.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SportsDapp": {
        "version": {
          "withMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e",
          "withoutMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e",
          "linkedWithoutMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e"
        },
        "inherit": [
          "EIP712MetaTxn",
          "EIP712Base",
          "ChainlinkClient",
          "Owned"
        ],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SportsDapp",
            "src": "contracts/sportsdapp/Sportsdapp.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeAddress",
            "src": "contracts/sportsdapp/Sportsdapp.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SportsDapp",
              "label": "feeAddress",
              "type": "t_address_payable",
              "src": "contracts/sportsdapp/Sportsdapp.sol:52"
            },
            {
              "contract": "SportsDapp",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:54"
            },
            {
              "contract": "SportsDapp",
              "label": "questions",
              "type": "t_mapping(t_uint256,t_struct(Question)8477_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:57"
            },
            {
              "contract": "SportsDapp",
              "label": "naam",
              "type": "t_mapping(t_address,t_string_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:59"
            },
            {
              "contract": "SportsDapp",
              "label": "allsubmissions",
              "type": "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8432_storage)dyn_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:63"
            },
            {
              "contract": "SportsDapp",
              "label": "price",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:74"
            },
            {
              "contract": "SportsDapp",
              "label": "oracle",
              "type": "t_address",
              "src": "contracts/sportsdapp/Sportsdapp.sol:76"
            },
            {
              "contract": "SportsDapp",
              "label": "jobId",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/Sportsdapp.sol:77"
            },
            {
              "contract": "SportsDapp",
              "label": "fee",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:78"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Question)8477_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.Question)"
            },
            "t_struct(Question)8477_storage": {
              "label": "struct SportsDapp.Question",
              "members": [
                {
                  "label": "author",
                  "type": "t_address"
                },
                {
                  "label": "_type",
                  "type": "t_uint256"
                },
                {
                  "label": "qcontent",
                  "type": "t_string_storage"
                },
                {
                  "label": "vote_price",
                  "type": "t_uint256"
                },
                {
                  "label": "correct_ans_id",
                  "type": "t_uint256"
                },
                {
                  "label": "options",
                  "type": "t_array(t_struct(Option)8440_storage)6_storage"
                },
                {
                  "label": "totalCount",
                  "type": "t_uint256"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "winnersnames",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "correct_answer_str",
                  "type": "t_string_storage"
                },
                {
                  "label": "correct_ans_reason",
                  "type": "t_string_storage"
                },
                {
                  "label": "distributed_each",
                  "type": "t_uint256"
                },
                {
                  "label": "totalWinners",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint8"
                },
                {
                  "label": "stopped",
                  "type": "t_uint8"
                },
                {
                  "label": "declared_result",
                  "type": "t_uint8"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_struct(Option)8440_storage)6_storage": {
              "label": "struct SportsDapp.Option[6]"
            },
            "t_struct(Option)8440_storage": {
              "label": "struct SportsDapp.Option",
              "members": [
                {
                  "label": "name",
                  "type": "t_uint8"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)"
            },
            "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8432_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.IntegerVoter[])"
            },
            "t_array(t_struct(IntegerVoter)8432_storage)dyn_storage": {
              "label": "struct SportsDapp.IntegerVoter[]"
            },
            "t_struct(IntegerVoter)8432_storage": {
              "label": "struct SportsDapp.IntegerVoter",
              "members": [
                {
                  "label": "add",
                  "type": "t_address"
                },
                {
                  "label": "submittedans",
                  "type": "t_uint256"
                }
              ]
            },
            "t_bytes32": {
              "label": "bytes32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "b6c96e981e7a4a5f84a9df6babd0fcaed959d0b786fc7a1dbaca224d5c3a5700",
          "withoutMetadata": "584eb7ae11e4bdb9f2c24db59186226708f37a42309e33361974cc49a5c80d9a",
          "linkedWithoutMetadata": "584eb7ae11e4bdb9f2c24db59186226708f37a42309e33361974cc49a5c80d9a"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)13570",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)5340",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_tokenBalances",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/synthetix/StakingRewards.sol:38"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:40"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:41"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)5154",
              "src": "contracts/synthetix/StakingRewards.sol:43"
            }
          ],
          "types": {
            "t_contract(IERC20)13570": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)5340": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_contract(IERC1155Game)5154": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)13200_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)13200_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)26427_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)13200_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)13200_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)26427_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)13570",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)13570": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)14324",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)14324": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)15238_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)15238_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)15238_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)25539_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)25539_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25274_storage"
                }
              ]
            },
            "t_struct(Set)25274_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)24663_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)24663_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)24663_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)18259",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)18259": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)18272",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)18272": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)20354_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)20354_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)24663_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)20354_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)20354_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)24663_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)21258",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)21258": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)25660_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)25037_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)25660_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)25660_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25274_storage"
                }
              ]
            },
            "t_struct(Set)25274_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)25037_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)24719_storage"
                }
              ]
            },
            "t_struct(Map)24719_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)24711_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)24711_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)24711_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Chainlink": {
        "version": {
          "withMetadata": "7621e9f47d5fe41dbbd12f236f8e06c4c92820e90b4232df6a405c44d58df66c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "CBORChainlink",
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkClient": {
        "version": {
          "withMetadata": "a5d7af034267c878f397ea3aedaed8e10d0e31095c844845c9c64f533f6ecce3",
          "withoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0",
          "linkedWithoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0"
        },
        "inherit": [],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "requestCount",
            "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ChainlinkClient",
              "label": "ens",
              "type": "t_contract(ENSInterface)831",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:27"
            },
            {
              "contract": "ChainlinkClient",
              "label": "ensNode",
              "type": "t_bytes32",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:28"
            },
            {
              "contract": "ChainlinkClient",
              "label": "link",
              "type": "t_contract(LinkTokenInterface)926",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:29"
            },
            {
              "contract": "ChainlinkClient",
              "label": "oracle",
              "type": "t_contract(ChainlinkRequestInterface)751",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:30"
            },
            {
              "contract": "ChainlinkClient",
              "label": "requestCount",
              "type": "t_uint256",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
            },
            {
              "contract": "ChainlinkClient",
              "label": "pendingRequests",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:32"
            }
          ],
          "types": {
            "t_contract(ENSInterface)831": {
              "label": "contract ENSInterface"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_contract(LinkTokenInterface)926": {
              "label": "contract LinkTokenInterface"
            },
            "t_contract(ChainlinkRequestInterface)751": {
              "label": "contract ChainlinkRequestInterface"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkRequestInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LinkTokenInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PointerInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BufferChainlink": {
        "version": {
          "withMetadata": "17d637daefa0c36f259c6f73625d378563b03674675486d91fb55c69e2a78be8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CBORChainlink": {
        "version": {
          "withMetadata": "7e5e7faf0a414b45319c58313db04381dcecf4cf331e417cf4c08a6087847e75",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSResolver": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)2551",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)2551": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "1526e6b3b8d81c6a6cd9c6a1a547491cd91183a6c0c990a9f35ece146fa2f4f8",
          "withoutMetadata": "1f641b8bd4c59cf6c1b411c1550ce3248e2f58b5ff645dec255ed708f13e9eda",
          "linkedWithoutMetadata": "1f641b8bd4c59cf6c1b411c1550ce3248e2f58b5ff645dec255ed708f13e9eda"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)5340",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:15"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)5435)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:22"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:25"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)3065_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:44"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:47"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)3174_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:83"
            }
          ],
          "types": {
            "t_contract(IERC1155)5340": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)5435)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)5435": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)3065_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)3065_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)3174_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)3174_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)5454_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)5454_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)5454_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)26735_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)26735_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)26470_storage"
                }
              ]
            },
            "t_struct(Set)26470_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Base": {
        "version": {
          "withMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "withoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "linkedWithoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712Base",
            "src": "contracts/sportsdapp/EIP712Base.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Base",
              "label": "domainSeperator",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/EIP712Base.sol:16"
            },
            {
              "contract": "EIP712Base",
              "label": "_chainid",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/EIP712Base.sol:18"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EIP712MetaTxn": {
        "version": {
          "withMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "withoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "linkedWithoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861"
        },
        "inherit": [
          "EIP712Base"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712MetaTxn",
            "src": "contracts/sportsdapp/EIP712MetaTxn.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712MetaTxn",
              "label": "nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/EIP712MetaTxn.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SportsDapp": {
        "version": {
          "withMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e",
          "withoutMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e",
          "linkedWithoutMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e"
        },
        "inherit": [
          "EIP712MetaTxn",
          "EIP712Base",
          "ChainlinkClient",
          "Owned"
        ],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SportsDapp",
            "src": "contracts/sportsdapp/Sportsdapp.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeAddress",
            "src": "contracts/sportsdapp/Sportsdapp.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SportsDapp",
              "label": "feeAddress",
              "type": "t_address_payable",
              "src": "contracts/sportsdapp/Sportsdapp.sol:52"
            },
            {
              "contract": "SportsDapp",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:54"
            },
            {
              "contract": "SportsDapp",
              "label": "questions",
              "type": "t_mapping(t_uint256,t_struct(Question)8477_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:57"
            },
            {
              "contract": "SportsDapp",
              "label": "naam",
              "type": "t_mapping(t_address,t_string_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:59"
            },
            {
              "contract": "SportsDapp",
              "label": "allsubmissions",
              "type": "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8432_storage)dyn_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:63"
            },
            {
              "contract": "SportsDapp",
              "label": "price",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:74"
            },
            {
              "contract": "SportsDapp",
              "label": "oracle",
              "type": "t_address",
              "src": "contracts/sportsdapp/Sportsdapp.sol:76"
            },
            {
              "contract": "SportsDapp",
              "label": "jobId",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/Sportsdapp.sol:77"
            },
            {
              "contract": "SportsDapp",
              "label": "fee",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:78"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Question)8477_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.Question)"
            },
            "t_struct(Question)8477_storage": {
              "label": "struct SportsDapp.Question",
              "members": [
                {
                  "label": "author",
                  "type": "t_address"
                },
                {
                  "label": "_type",
                  "type": "t_uint256"
                },
                {
                  "label": "qcontent",
                  "type": "t_string_storage"
                },
                {
                  "label": "vote_price",
                  "type": "t_uint256"
                },
                {
                  "label": "correct_ans_id",
                  "type": "t_uint256"
                },
                {
                  "label": "options",
                  "type": "t_array(t_struct(Option)8440_storage)6_storage"
                },
                {
                  "label": "totalCount",
                  "type": "t_uint256"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "winnersnames",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "correct_answer_str",
                  "type": "t_string_storage"
                },
                {
                  "label": "correct_ans_reason",
                  "type": "t_string_storage"
                },
                {
                  "label": "distributed_each",
                  "type": "t_uint256"
                },
                {
                  "label": "totalWinners",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint8"
                },
                {
                  "label": "stopped",
                  "type": "t_uint8"
                },
                {
                  "label": "declared_result",
                  "type": "t_uint8"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_struct(Option)8440_storage)6_storage": {
              "label": "struct SportsDapp.Option[6]"
            },
            "t_struct(Option)8440_storage": {
              "label": "struct SportsDapp.Option",
              "members": [
                {
                  "label": "name",
                  "type": "t_uint8"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)"
            },
            "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8432_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.IntegerVoter[])"
            },
            "t_array(t_struct(IntegerVoter)8432_storage)dyn_storage": {
              "label": "struct SportsDapp.IntegerVoter[]"
            },
            "t_struct(IntegerVoter)8432_storage": {
              "label": "struct SportsDapp.IntegerVoter",
              "members": [
                {
                  "label": "add",
                  "type": "t_address"
                },
                {
                  "label": "submittedans",
                  "type": "t_uint256"
                }
              ]
            },
            "t_bytes32": {
              "label": "bytes32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "4c061b5a7770a7233998d2741b342c1a2644bd1a6a502fc76d6972bbd269dda1",
          "withoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2",
          "linkedWithoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)13562",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)5340",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_tokenBalances",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/synthetix/StakingRewards.sol:38"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:40"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:41"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)5154",
              "src": "contracts/synthetix/StakingRewards.sol:43"
            }
          ],
          "types": {
            "t_contract(IERC20)13562": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)5340": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_contract(IERC1155Game)5154": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)13192_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)13192_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)26419_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)13192_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)13192_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)26419_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)13562",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)13562": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)14316",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)14316": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)15230_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)15230_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)15230_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)25531_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)25531_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25266_storage"
                }
              ]
            },
            "t_struct(Set)25266_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)24655_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)24655_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)24655_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)18251",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)18251": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)18264",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)18264": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)20346_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)20346_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)24655_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)20346_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)20346_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)24655_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)21250",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)21250": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)25652_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)25029_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)25652_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)25652_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25266_storage"
                }
              ]
            },
            "t_struct(Set)25266_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)25029_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)24711_storage"
                }
              ]
            },
            "t_struct(Map)24711_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)24703_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)24703_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)24703_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Chainlink": {
        "version": {
          "withMetadata": "7621e9f47d5fe41dbbd12f236f8e06c4c92820e90b4232df6a405c44d58df66c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "CBORChainlink",
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkClient": {
        "version": {
          "withMetadata": "a5d7af034267c878f397ea3aedaed8e10d0e31095c844845c9c64f533f6ecce3",
          "withoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0",
          "linkedWithoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0"
        },
        "inherit": [],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "requestCount",
            "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ChainlinkClient",
              "label": "ens",
              "type": "t_contract(ENSInterface)831",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:27"
            },
            {
              "contract": "ChainlinkClient",
              "label": "ensNode",
              "type": "t_bytes32",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:28"
            },
            {
              "contract": "ChainlinkClient",
              "label": "link",
              "type": "t_contract(LinkTokenInterface)926",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:29"
            },
            {
              "contract": "ChainlinkClient",
              "label": "oracle",
              "type": "t_contract(ChainlinkRequestInterface)751",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:30"
            },
            {
              "contract": "ChainlinkClient",
              "label": "requestCount",
              "type": "t_uint256",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
            },
            {
              "contract": "ChainlinkClient",
              "label": "pendingRequests",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:32"
            }
          ],
          "types": {
            "t_contract(ENSInterface)831": {
              "label": "contract ENSInterface"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_contract(LinkTokenInterface)926": {
              "label": "contract LinkTokenInterface"
            },
            "t_contract(ChainlinkRequestInterface)751": {
              "label": "contract ChainlinkRequestInterface"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkRequestInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LinkTokenInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PointerInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BufferChainlink": {
        "version": {
          "withMetadata": "17d637daefa0c36f259c6f73625d378563b03674675486d91fb55c69e2a78be8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CBORChainlink": {
        "version": {
          "withMetadata": "7e5e7faf0a414b45319c58313db04381dcecf4cf331e417cf4c08a6087847e75",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSResolver": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)2551",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)2551": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "aa4b19eee622d0145f99cdca7d8cafa1d625b207dd0f679844e5670ed2ab7665",
          "withoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b",
          "linkedWithoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)5340",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:15"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)5435)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:22"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:25"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)3065_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:44"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:47"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)3174_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:83"
            }
          ],
          "types": {
            "t_contract(IERC1155)5340": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)5435)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)5435": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)3065_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)3065_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)3174_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)3174_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)5454_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)5454_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)5454_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)26735_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)26735_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)26470_storage"
                }
              ]
            },
            "t_struct(Set)26470_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Base": {
        "version": {
          "withMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "withoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "linkedWithoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712Base",
            "src": "contracts/sportsdapp/EIP712Base.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Base",
              "label": "domainSeperator",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/EIP712Base.sol:16"
            },
            {
              "contract": "EIP712Base",
              "label": "_chainid",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/EIP712Base.sol:18"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EIP712MetaTxn": {
        "version": {
          "withMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "withoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "linkedWithoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861"
        },
        "inherit": [
          "EIP712Base"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712MetaTxn",
            "src": "contracts/sportsdapp/EIP712MetaTxn.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712MetaTxn",
              "label": "nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/EIP712MetaTxn.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SportsDapp": {
        "version": {
          "withMetadata": "5e9d368fdfe8dfabc14b3e52ebe71fe3237fdc1e4de8039fee199fc8b95a9606",
          "withoutMetadata": "5e9d368fdfe8dfabc14b3e52ebe71fe3237fdc1e4de8039fee199fc8b95a9606",
          "linkedWithoutMetadata": "5e9d368fdfe8dfabc14b3e52ebe71fe3237fdc1e4de8039fee199fc8b95a9606"
        },
        "inherit": [
          "EIP712MetaTxn",
          "EIP712Base",
          "ChainlinkClient",
          "Owned"
        ],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SportsDapp",
            "src": "contracts/sportsdapp/Sportsdapp.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeAddress",
            "src": "contracts/sportsdapp/Sportsdapp.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SportsDapp",
              "label": "feeAddress",
              "type": "t_address_payable",
              "src": "contracts/sportsdapp/Sportsdapp.sol:52"
            },
            {
              "contract": "SportsDapp",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:54"
            },
            {
              "contract": "SportsDapp",
              "label": "questions",
              "type": "t_mapping(t_uint256,t_struct(Question)8477_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:57"
            },
            {
              "contract": "SportsDapp",
              "label": "naam",
              "type": "t_mapping(t_address,t_string_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:59"
            },
            {
              "contract": "SportsDapp",
              "label": "allsubmissions",
              "type": "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8432_storage)dyn_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:63"
            },
            {
              "contract": "SportsDapp",
              "label": "price",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:74"
            },
            {
              "contract": "SportsDapp",
              "label": "oracle",
              "type": "t_address",
              "src": "contracts/sportsdapp/Sportsdapp.sol:76"
            },
            {
              "contract": "SportsDapp",
              "label": "jobId",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/Sportsdapp.sol:77"
            },
            {
              "contract": "SportsDapp",
              "label": "fee",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:78"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Question)8477_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.Question)"
            },
            "t_struct(Question)8477_storage": {
              "label": "struct SportsDapp.Question",
              "members": [
                {
                  "label": "author",
                  "type": "t_address"
                },
                {
                  "label": "_type",
                  "type": "t_uint256"
                },
                {
                  "label": "qcontent",
                  "type": "t_string_storage"
                },
                {
                  "label": "vote_price",
                  "type": "t_uint256"
                },
                {
                  "label": "correct_ans_id",
                  "type": "t_uint256"
                },
                {
                  "label": "options",
                  "type": "t_array(t_struct(Option)8440_storage)6_storage"
                },
                {
                  "label": "totalCount",
                  "type": "t_uint256"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "winnersnames",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "correct_answer_str",
                  "type": "t_string_storage"
                },
                {
                  "label": "correct_ans_reason",
                  "type": "t_string_storage"
                },
                {
                  "label": "distributed_each",
                  "type": "t_uint256"
                },
                {
                  "label": "totalWinners",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint8"
                },
                {
                  "label": "stopped",
                  "type": "t_uint8"
                },
                {
                  "label": "declared_result",
                  "type": "t_uint8"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_struct(Option)8440_storage)6_storage": {
              "label": "struct SportsDapp.Option[6]"
            },
            "t_struct(Option)8440_storage": {
              "label": "struct SportsDapp.Option",
              "members": [
                {
                  "label": "name",
                  "type": "t_uint8"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)"
            },
            "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8432_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.IntegerVoter[])"
            },
            "t_array(t_struct(IntegerVoter)8432_storage)dyn_storage": {
              "label": "struct SportsDapp.IntegerVoter[]"
            },
            "t_struct(IntegerVoter)8432_storage": {
              "label": "struct SportsDapp.IntegerVoter",
              "members": [
                {
                  "label": "add",
                  "type": "t_address"
                },
                {
                  "label": "submittedans",
                  "type": "t_uint256"
                }
              ]
            },
            "t_bytes32": {
              "label": "bytes32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "4c061b5a7770a7233998d2741b342c1a2644bd1a6a502fc76d6972bbd269dda1",
          "withoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2",
          "linkedWithoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)13562",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)5340",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_tokenBalances",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/synthetix/StakingRewards.sol:38"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:40"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:41"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)5154",
              "src": "contracts/synthetix/StakingRewards.sol:43"
            }
          ],
          "types": {
            "t_contract(IERC20)13562": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)5340": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_contract(IERC1155Game)5154": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)13192_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)13192_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)26419_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)13192_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)13192_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)26419_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)13562",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)13562": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)14316",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)14316": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)15230_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)15230_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)15230_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)25531_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)25531_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25266_storage"
                }
              ]
            },
            "t_struct(Set)25266_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)24655_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)24655_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)24655_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)18251",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)18251": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)18264",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)18264": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)20346_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)20346_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)24655_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)20346_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)20346_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)24655_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)21250",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)21250": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)25652_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)25029_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)25652_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)25652_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25266_storage"
                }
              ]
            },
            "t_struct(Set)25266_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)25029_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)24711_storage"
                }
              ]
            },
            "t_struct(Map)24711_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)24703_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)24703_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)24703_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Chainlink": {
        "version": {
          "withMetadata": "7621e9f47d5fe41dbbd12f236f8e06c4c92820e90b4232df6a405c44d58df66c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "CBORChainlink",
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkClient": {
        "version": {
          "withMetadata": "a5d7af034267c878f397ea3aedaed8e10d0e31095c844845c9c64f533f6ecce3",
          "withoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0",
          "linkedWithoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0"
        },
        "inherit": [],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "requestCount",
            "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ChainlinkClient",
              "label": "ens",
              "type": "t_contract(ENSInterface)831",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:27"
            },
            {
              "contract": "ChainlinkClient",
              "label": "ensNode",
              "type": "t_bytes32",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:28"
            },
            {
              "contract": "ChainlinkClient",
              "label": "link",
              "type": "t_contract(LinkTokenInterface)926",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:29"
            },
            {
              "contract": "ChainlinkClient",
              "label": "oracle",
              "type": "t_contract(ChainlinkRequestInterface)751",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:30"
            },
            {
              "contract": "ChainlinkClient",
              "label": "requestCount",
              "type": "t_uint256",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
            },
            {
              "contract": "ChainlinkClient",
              "label": "pendingRequests",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:32"
            }
          ],
          "types": {
            "t_contract(ENSInterface)831": {
              "label": "contract ENSInterface"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_contract(LinkTokenInterface)926": {
              "label": "contract LinkTokenInterface"
            },
            "t_contract(ChainlinkRequestInterface)751": {
              "label": "contract ChainlinkRequestInterface"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkRequestInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LinkTokenInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PointerInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BufferChainlink": {
        "version": {
          "withMetadata": "17d637daefa0c36f259c6f73625d378563b03674675486d91fb55c69e2a78be8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CBORChainlink": {
        "version": {
          "withMetadata": "7e5e7faf0a414b45319c58313db04381dcecf4cf331e417cf4c08a6087847e75",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSResolver": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)2551",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)2551": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "aa4b19eee622d0145f99cdca7d8cafa1d625b207dd0f679844e5670ed2ab7665",
          "withoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b",
          "linkedWithoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)5340",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:15"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)5435)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:22"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:25"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)3065_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:44"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:47"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)3174_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:83"
            }
          ],
          "types": {
            "t_contract(IERC1155)5340": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)5435)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)5435": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)3065_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)3065_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)3174_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)3174_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)5454_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)5454_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)5454_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)26735_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)26735_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)26470_storage"
                }
              ]
            },
            "t_struct(Set)26470_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Base": {
        "version": {
          "withMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "withoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "linkedWithoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712Base",
            "src": "contracts/sportsdapp/EIP712Base.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Base",
              "label": "domainSeperator",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/EIP712Base.sol:16"
            },
            {
              "contract": "EIP712Base",
              "label": "_chainid",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/EIP712Base.sol:18"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EIP712MetaTxn": {
        "version": {
          "withMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "withoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "linkedWithoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861"
        },
        "inherit": [
          "EIP712Base"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712MetaTxn",
            "src": "contracts/sportsdapp/EIP712MetaTxn.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712MetaTxn",
              "label": "nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/EIP712MetaTxn.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SportsDapp": {
        "version": {
          "withMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e",
          "withoutMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e",
          "linkedWithoutMetadata": "b56abafd0eadfd31a7d449264d06682499becc2c685376d1b61a41ae988bce0e"
        },
        "inherit": [
          "EIP712MetaTxn",
          "EIP712Base",
          "ChainlinkClient",
          "Owned"
        ],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SportsDapp",
            "src": "contracts/sportsdapp/Sportsdapp.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeAddress",
            "src": "contracts/sportsdapp/Sportsdapp.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SportsDapp",
              "label": "feeAddress",
              "type": "t_address_payable",
              "src": "contracts/sportsdapp/Sportsdapp.sol:52"
            },
            {
              "contract": "SportsDapp",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:54"
            },
            {
              "contract": "SportsDapp",
              "label": "questions",
              "type": "t_mapping(t_uint256,t_struct(Question)8477_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:57"
            },
            {
              "contract": "SportsDapp",
              "label": "naam",
              "type": "t_mapping(t_address,t_string_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:59"
            },
            {
              "contract": "SportsDapp",
              "label": "allsubmissions",
              "type": "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8432_storage)dyn_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:63"
            },
            {
              "contract": "SportsDapp",
              "label": "price",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:74"
            },
            {
              "contract": "SportsDapp",
              "label": "oracle",
              "type": "t_address",
              "src": "contracts/sportsdapp/Sportsdapp.sol:76"
            },
            {
              "contract": "SportsDapp",
              "label": "jobId",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/Sportsdapp.sol:77"
            },
            {
              "contract": "SportsDapp",
              "label": "fee",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:78"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Question)8477_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.Question)"
            },
            "t_struct(Question)8477_storage": {
              "label": "struct SportsDapp.Question",
              "members": [
                {
                  "label": "author",
                  "type": "t_address"
                },
                {
                  "label": "_type",
                  "type": "t_uint256"
                },
                {
                  "label": "qcontent",
                  "type": "t_string_storage"
                },
                {
                  "label": "vote_price",
                  "type": "t_uint256"
                },
                {
                  "label": "correct_ans_id",
                  "type": "t_uint256"
                },
                {
                  "label": "options",
                  "type": "t_array(t_struct(Option)8440_storage)6_storage"
                },
                {
                  "label": "totalCount",
                  "type": "t_uint256"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "winnersnames",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "correct_answer_str",
                  "type": "t_string_storage"
                },
                {
                  "label": "correct_ans_reason",
                  "type": "t_string_storage"
                },
                {
                  "label": "distributed_each",
                  "type": "t_uint256"
                },
                {
                  "label": "totalWinners",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint8"
                },
                {
                  "label": "stopped",
                  "type": "t_uint8"
                },
                {
                  "label": "declared_result",
                  "type": "t_uint8"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_struct(Option)8440_storage)6_storage": {
              "label": "struct SportsDapp.Option[6]"
            },
            "t_struct(Option)8440_storage": {
              "label": "struct SportsDapp.Option",
              "members": [
                {
                  "label": "name",
                  "type": "t_uint8"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)"
            },
            "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8432_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.IntegerVoter[])"
            },
            "t_array(t_struct(IntegerVoter)8432_storage)dyn_storage": {
              "label": "struct SportsDapp.IntegerVoter[]"
            },
            "t_struct(IntegerVoter)8432_storage": {
              "label": "struct SportsDapp.IntegerVoter",
              "members": [
                {
                  "label": "add",
                  "type": "t_address"
                },
                {
                  "label": "submittedans",
                  "type": "t_uint256"
                }
              ]
            },
            "t_bytes32": {
              "label": "bytes32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "4c061b5a7770a7233998d2741b342c1a2644bd1a6a502fc76d6972bbd269dda1",
          "withoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2",
          "linkedWithoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)13562",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)5340",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_tokenBalances",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/synthetix/StakingRewards.sol:38"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:40"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:41"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)5154",
              "src": "contracts/synthetix/StakingRewards.sol:43"
            }
          ],
          "types": {
            "t_contract(IERC20)13562": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)5340": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_contract(IERC1155Game)5154": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)13192_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)13192_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)26419_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)13192_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)13192_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)26419_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)13562",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)13562": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)14316",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)14316": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)15230_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)15230_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)15230_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)25531_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)25531_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25266_storage"
                }
              ]
            },
            "t_struct(Set)25266_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)24655_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)24655_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)24655_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)18251",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)18251": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)18264",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)18264": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)20346_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)20346_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)24655_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)20346_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)20346_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)24655_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)21250",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)21250": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)25652_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)25029_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)25652_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)25652_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25266_storage"
                }
              ]
            },
            "t_struct(Set)25266_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)25029_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)24711_storage"
                }
              ]
            },
            "t_struct(Map)24711_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)24703_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)24703_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)24703_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Chainlink": {
        "version": {
          "withMetadata": "7621e9f47d5fe41dbbd12f236f8e06c4c92820e90b4232df6a405c44d58df66c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "CBORChainlink",
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkClient": {
        "version": {
          "withMetadata": "a5d7af034267c878f397ea3aedaed8e10d0e31095c844845c9c64f533f6ecce3",
          "withoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0",
          "linkedWithoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0"
        },
        "inherit": [],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "requestCount",
            "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ChainlinkClient",
              "label": "ens",
              "type": "t_contract(ENSInterface)831",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:27"
            },
            {
              "contract": "ChainlinkClient",
              "label": "ensNode",
              "type": "t_bytes32",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:28"
            },
            {
              "contract": "ChainlinkClient",
              "label": "link",
              "type": "t_contract(LinkTokenInterface)926",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:29"
            },
            {
              "contract": "ChainlinkClient",
              "label": "oracle",
              "type": "t_contract(ChainlinkRequestInterface)751",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:30"
            },
            {
              "contract": "ChainlinkClient",
              "label": "requestCount",
              "type": "t_uint256",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
            },
            {
              "contract": "ChainlinkClient",
              "label": "pendingRequests",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:32"
            }
          ],
          "types": {
            "t_contract(ENSInterface)831": {
              "label": "contract ENSInterface"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_contract(LinkTokenInterface)926": {
              "label": "contract LinkTokenInterface"
            },
            "t_contract(ChainlinkRequestInterface)751": {
              "label": "contract ChainlinkRequestInterface"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkRequestInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LinkTokenInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PointerInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BufferChainlink": {
        "version": {
          "withMetadata": "17d637daefa0c36f259c6f73625d378563b03674675486d91fb55c69e2a78be8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CBORChainlink": {
        "version": {
          "withMetadata": "7e5e7faf0a414b45319c58313db04381dcecf4cf331e417cf4c08a6087847e75",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSResolver": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)2551",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)2551": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "aa4b19eee622d0145f99cdca7d8cafa1d625b207dd0f679844e5670ed2ab7665",
          "withoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b",
          "linkedWithoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)5340",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:15"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)5435)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:22"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:25"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)3065_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:44"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:47"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)3174_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:83"
            }
          ],
          "types": {
            "t_contract(IERC1155)5340": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)5435)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)5435": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)3065_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)3065_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)3174_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)3174_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)5454_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)5454_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)5454_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)26735_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)26735_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)26470_storage"
                }
              ]
            },
            "t_struct(Set)26470_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Base": {
        "version": {
          "withMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "withoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "linkedWithoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712Base",
            "src": "contracts/sportsdapp/EIP712Base.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Base",
              "label": "domainSeperator",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/EIP712Base.sol:16"
            },
            {
              "contract": "EIP712Base",
              "label": "_chainid",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/EIP712Base.sol:18"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EIP712MetaTxn": {
        "version": {
          "withMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "withoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "linkedWithoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861"
        },
        "inherit": [
          "EIP712Base"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712MetaTxn",
            "src": "contracts/sportsdapp/EIP712MetaTxn.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712MetaTxn",
              "label": "nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/EIP712MetaTxn.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SportsDapp": {
        "version": {
          "withMetadata": "2f5008ebdec4fe017ab09ac956ff170350dcefaddd8fff15095a56afcb466423",
          "withoutMetadata": "2f5008ebdec4fe017ab09ac956ff170350dcefaddd8fff15095a56afcb466423",
          "linkedWithoutMetadata": "2f5008ebdec4fe017ab09ac956ff170350dcefaddd8fff15095a56afcb466423"
        },
        "inherit": [
          "EIP712MetaTxn",
          "EIP712Base",
          "ChainlinkClient",
          "Owned"
        ],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SportsDapp",
            "src": "contracts/sportsdapp/Sportsdapp.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeAddress",
            "src": "contracts/sportsdapp/Sportsdapp.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SportsDapp",
              "label": "feeAddress",
              "type": "t_address_payable",
              "src": "contracts/sportsdapp/Sportsdapp.sol:52"
            },
            {
              "contract": "SportsDapp",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:54"
            },
            {
              "contract": "SportsDapp",
              "label": "questions",
              "type": "t_mapping(t_uint256,t_struct(Question)8477_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:57"
            },
            {
              "contract": "SportsDapp",
              "label": "naam",
              "type": "t_mapping(t_address,t_string_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:59"
            },
            {
              "contract": "SportsDapp",
              "label": "allsubmissions",
              "type": "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8432_storage)dyn_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:63"
            },
            {
              "contract": "SportsDapp",
              "label": "price",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:74"
            },
            {
              "contract": "SportsDapp",
              "label": "oracle",
              "type": "t_address",
              "src": "contracts/sportsdapp/Sportsdapp.sol:76"
            },
            {
              "contract": "SportsDapp",
              "label": "jobId",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/Sportsdapp.sol:77"
            },
            {
              "contract": "SportsDapp",
              "label": "fee",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:78"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Question)8477_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.Question)"
            },
            "t_struct(Question)8477_storage": {
              "label": "struct SportsDapp.Question",
              "members": [
                {
                  "label": "author",
                  "type": "t_address"
                },
                {
                  "label": "_type",
                  "type": "t_uint256"
                },
                {
                  "label": "qcontent",
                  "type": "t_string_storage"
                },
                {
                  "label": "vote_price",
                  "type": "t_uint256"
                },
                {
                  "label": "correct_ans_id",
                  "type": "t_uint256"
                },
                {
                  "label": "options",
                  "type": "t_array(t_struct(Option)8440_storage)6_storage"
                },
                {
                  "label": "totalCount",
                  "type": "t_uint256"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "winnersnames",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "correct_answer_str",
                  "type": "t_string_storage"
                },
                {
                  "label": "correct_ans_reason",
                  "type": "t_string_storage"
                },
                {
                  "label": "distributed_each",
                  "type": "t_uint256"
                },
                {
                  "label": "totalWinners",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint8"
                },
                {
                  "label": "stopped",
                  "type": "t_uint8"
                },
                {
                  "label": "declared_result",
                  "type": "t_uint8"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_struct(Option)8440_storage)6_storage": {
              "label": "struct SportsDapp.Option[6]"
            },
            "t_struct(Option)8440_storage": {
              "label": "struct SportsDapp.Option",
              "members": [
                {
                  "label": "name",
                  "type": "t_uint8"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)"
            },
            "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8432_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.IntegerVoter[])"
            },
            "t_array(t_struct(IntegerVoter)8432_storage)dyn_storage": {
              "label": "struct SportsDapp.IntegerVoter[]"
            },
            "t_struct(IntegerVoter)8432_storage": {
              "label": "struct SportsDapp.IntegerVoter",
              "members": [
                {
                  "label": "add",
                  "type": "t_address"
                },
                {
                  "label": "submittedans",
                  "type": "t_uint256"
                }
              ]
            },
            "t_bytes32": {
              "label": "bytes32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "4c061b5a7770a7233998d2741b342c1a2644bd1a6a502fc76d6972bbd269dda1",
          "withoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2",
          "linkedWithoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)13562",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)5340",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_tokenBalances",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/synthetix/StakingRewards.sol:38"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:40"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:41"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)5154",
              "src": "contracts/synthetix/StakingRewards.sol:43"
            }
          ],
          "types": {
            "t_contract(IERC20)13562": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)5340": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_contract(IERC1155Game)5154": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)13192_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)13192_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)26419_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)13192_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)13192_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)26419_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)13562",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)13562": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)14316",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)14316": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)15230_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)15230_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)15230_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)25531_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)25531_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25266_storage"
                }
              ]
            },
            "t_struct(Set)25266_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)24655_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)24655_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)24655_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)18251",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)18251": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)18264",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)18264": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)20346_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)20346_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)24655_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)20346_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)20346_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)24655_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)21250",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)21250": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)25652_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)25029_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)25652_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)25652_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25266_storage"
                }
              ]
            },
            "t_struct(Set)25266_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)25029_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)24711_storage"
                }
              ]
            },
            "t_struct(Map)24711_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)24703_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)24703_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)24703_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Chainlink": {
        "version": {
          "withMetadata": "7621e9f47d5fe41dbbd12f236f8e06c4c92820e90b4232df6a405c44d58df66c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "CBORChainlink",
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkClient": {
        "version": {
          "withMetadata": "a5d7af034267c878f397ea3aedaed8e10d0e31095c844845c9c64f533f6ecce3",
          "withoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0",
          "linkedWithoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0"
        },
        "inherit": [],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "requestCount",
            "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ChainlinkClient",
              "label": "ens",
              "type": "t_contract(ENSInterface)831",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:27"
            },
            {
              "contract": "ChainlinkClient",
              "label": "ensNode",
              "type": "t_bytes32",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:28"
            },
            {
              "contract": "ChainlinkClient",
              "label": "link",
              "type": "t_contract(LinkTokenInterface)926",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:29"
            },
            {
              "contract": "ChainlinkClient",
              "label": "oracle",
              "type": "t_contract(ChainlinkRequestInterface)751",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:30"
            },
            {
              "contract": "ChainlinkClient",
              "label": "requestCount",
              "type": "t_uint256",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
            },
            {
              "contract": "ChainlinkClient",
              "label": "pendingRequests",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:32"
            }
          ],
          "types": {
            "t_contract(ENSInterface)831": {
              "label": "contract ENSInterface"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_contract(LinkTokenInterface)926": {
              "label": "contract LinkTokenInterface"
            },
            "t_contract(ChainlinkRequestInterface)751": {
              "label": "contract ChainlinkRequestInterface"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkRequestInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LinkTokenInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PointerInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BufferChainlink": {
        "version": {
          "withMetadata": "17d637daefa0c36f259c6f73625d378563b03674675486d91fb55c69e2a78be8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CBORChainlink": {
        "version": {
          "withMetadata": "7e5e7faf0a414b45319c58313db04381dcecf4cf331e417cf4c08a6087847e75",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSResolver": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)2551",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)2551": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "aa4b19eee622d0145f99cdca7d8cafa1d625b207dd0f679844e5670ed2ab7665",
          "withoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b",
          "linkedWithoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)5340",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:15"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)5435)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:22"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:25"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)3065_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:44"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:47"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)3174_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:83"
            }
          ],
          "types": {
            "t_contract(IERC1155)5340": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)5435)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)5435": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)3065_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)3065_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)3174_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)3174_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)5454_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)5454_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)5454_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)26733_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)26733_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)26468_storage"
                }
              ]
            },
            "t_struct(Set)26468_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Base": {
        "version": {
          "withMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "withoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "linkedWithoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712Base",
            "src": "contracts/sportsdapp/EIP712Base.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Base",
              "label": "domainSeperator",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/EIP712Base.sol:16"
            },
            {
              "contract": "EIP712Base",
              "label": "_chainid",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/EIP712Base.sol:18"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EIP712MetaTxn": {
        "version": {
          "withMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "withoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "linkedWithoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861"
        },
        "inherit": [
          "EIP712Base"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712MetaTxn",
            "src": "contracts/sportsdapp/EIP712MetaTxn.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712MetaTxn",
              "label": "nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/EIP712MetaTxn.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SportsDapp": {
        "version": {
          "withMetadata": "80dc68c645e8fab05164a9a22537be8eb8294c8ca1bbf097cf05bc575b0a4d10",
          "withoutMetadata": "80dc68c645e8fab05164a9a22537be8eb8294c8ca1bbf097cf05bc575b0a4d10",
          "linkedWithoutMetadata": "80dc68c645e8fab05164a9a22537be8eb8294c8ca1bbf097cf05bc575b0a4d10"
        },
        "inherit": [
          "EIP712MetaTxn",
          "EIP712Base",
          "ChainlinkClient",
          "Owned"
        ],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SportsDapp",
            "src": "contracts/sportsdapp/Sportsdapp.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeAddress",
            "src": "contracts/sportsdapp/Sportsdapp.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SportsDapp",
              "label": "feeAddress",
              "type": "t_address_payable",
              "src": "contracts/sportsdapp/Sportsdapp.sol:52"
            },
            {
              "contract": "SportsDapp",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:54"
            },
            {
              "contract": "SportsDapp",
              "label": "questions",
              "type": "t_mapping(t_uint256,t_struct(Question)8477_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:57"
            },
            {
              "contract": "SportsDapp",
              "label": "naam",
              "type": "t_mapping(t_address,t_string_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:59"
            },
            {
              "contract": "SportsDapp",
              "label": "allsubmissions",
              "type": "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8432_storage)dyn_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:63"
            },
            {
              "contract": "SportsDapp",
              "label": "price",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:74"
            },
            {
              "contract": "SportsDapp",
              "label": "oracle",
              "type": "t_address",
              "src": "contracts/sportsdapp/Sportsdapp.sol:76"
            },
            {
              "contract": "SportsDapp",
              "label": "jobId",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/Sportsdapp.sol:77"
            },
            {
              "contract": "SportsDapp",
              "label": "fee",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:78"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Question)8477_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.Question)"
            },
            "t_struct(Question)8477_storage": {
              "label": "struct SportsDapp.Question",
              "members": [
                {
                  "label": "author",
                  "type": "t_address"
                },
                {
                  "label": "_type",
                  "type": "t_uint256"
                },
                {
                  "label": "qcontent",
                  "type": "t_string_storage"
                },
                {
                  "label": "vote_price",
                  "type": "t_uint256"
                },
                {
                  "label": "correct_ans_id",
                  "type": "t_uint256"
                },
                {
                  "label": "options",
                  "type": "t_array(t_struct(Option)8440_storage)6_storage"
                },
                {
                  "label": "totalCount",
                  "type": "t_uint256"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "winnersnames",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "correct_answer_str",
                  "type": "t_string_storage"
                },
                {
                  "label": "correct_ans_reason",
                  "type": "t_string_storage"
                },
                {
                  "label": "distributed_each",
                  "type": "t_uint256"
                },
                {
                  "label": "totalWinners",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint8"
                },
                {
                  "label": "stopped",
                  "type": "t_uint8"
                },
                {
                  "label": "declared_result",
                  "type": "t_uint8"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_struct(Option)8440_storage)6_storage": {
              "label": "struct SportsDapp.Option[6]"
            },
            "t_struct(Option)8440_storage": {
              "label": "struct SportsDapp.Option",
              "members": [
                {
                  "label": "name",
                  "type": "t_uint8"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)"
            },
            "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8432_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.IntegerVoter[])"
            },
            "t_array(t_struct(IntegerVoter)8432_storage)dyn_storage": {
              "label": "struct SportsDapp.IntegerVoter[]"
            },
            "t_struct(IntegerVoter)8432_storage": {
              "label": "struct SportsDapp.IntegerVoter",
              "members": [
                {
                  "label": "add",
                  "type": "t_address"
                },
                {
                  "label": "submittedans",
                  "type": "t_uint256"
                }
              ]
            },
            "t_bytes32": {
              "label": "bytes32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "4c061b5a7770a7233998d2741b342c1a2644bd1a6a502fc76d6972bbd269dda1",
          "withoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2",
          "linkedWithoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)13560",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)5340",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_tokenBalances",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/synthetix/StakingRewards.sol:38"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:40"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:41"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)5154",
              "src": "contracts/synthetix/StakingRewards.sol:43"
            }
          ],
          "types": {
            "t_contract(IERC20)13560": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)5340": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_contract(IERC1155Game)5154": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)13190_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)13190_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)26417_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)13190_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)13190_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)26417_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)13560",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)13560": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)14314",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)14314": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)15228_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)15228_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)15228_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)25529_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)25529_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25264_storage"
                }
              ]
            },
            "t_struct(Set)25264_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)24653_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)24653_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)24653_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)18249",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)18249": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)18262",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)18262": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)20344_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)20344_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)24653_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)20344_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)20344_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)24653_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)21248",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)21248": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)25650_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)25027_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)25650_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)25650_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25264_storage"
                }
              ]
            },
            "t_struct(Set)25264_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)25027_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)24709_storage"
                }
              ]
            },
            "t_struct(Map)24709_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)24701_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)24701_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)24701_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Chainlink": {
        "version": {
          "withMetadata": "7621e9f47d5fe41dbbd12f236f8e06c4c92820e90b4232df6a405c44d58df66c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "CBORChainlink",
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkClient": {
        "version": {
          "withMetadata": "a5d7af034267c878f397ea3aedaed8e10d0e31095c844845c9c64f533f6ecce3",
          "withoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0",
          "linkedWithoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0"
        },
        "inherit": [],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "requestCount",
            "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ChainlinkClient",
              "label": "ens",
              "type": "t_contract(ENSInterface)831",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:27"
            },
            {
              "contract": "ChainlinkClient",
              "label": "ensNode",
              "type": "t_bytes32",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:28"
            },
            {
              "contract": "ChainlinkClient",
              "label": "link",
              "type": "t_contract(LinkTokenInterface)926",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:29"
            },
            {
              "contract": "ChainlinkClient",
              "label": "oracle",
              "type": "t_contract(ChainlinkRequestInterface)751",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:30"
            },
            {
              "contract": "ChainlinkClient",
              "label": "requestCount",
              "type": "t_uint256",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
            },
            {
              "contract": "ChainlinkClient",
              "label": "pendingRequests",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:32"
            }
          ],
          "types": {
            "t_contract(ENSInterface)831": {
              "label": "contract ENSInterface"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_contract(LinkTokenInterface)926": {
              "label": "contract LinkTokenInterface"
            },
            "t_contract(ChainlinkRequestInterface)751": {
              "label": "contract ChainlinkRequestInterface"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkRequestInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LinkTokenInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PointerInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BufferChainlink": {
        "version": {
          "withMetadata": "17d637daefa0c36f259c6f73625d378563b03674675486d91fb55c69e2a78be8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CBORChainlink": {
        "version": {
          "withMetadata": "7e5e7faf0a414b45319c58313db04381dcecf4cf331e417cf4c08a6087847e75",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSResolver": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)2551",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)2551": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "aa4b19eee622d0145f99cdca7d8cafa1d625b207dd0f679844e5670ed2ab7665",
          "withoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b",
          "linkedWithoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)5340",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:15"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)5435)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:22"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:25"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)3065_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:44"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:47"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)3174_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:83"
            }
          ],
          "types": {
            "t_contract(IERC1155)5340": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)5435)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)5435": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)3065_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)3065_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)3174_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)3174_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)5454_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)5454_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)5454_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)26733_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)26733_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)26468_storage"
                }
              ]
            },
            "t_struct(Set)26468_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Base": {
        "version": {
          "withMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "withoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "linkedWithoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712Base",
            "src": "contracts/sportsdapp/EIP712Base.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Base",
              "label": "domainSeperator",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/EIP712Base.sol:16"
            },
            {
              "contract": "EIP712Base",
              "label": "_chainid",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/EIP712Base.sol:18"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EIP712MetaTxn": {
        "version": {
          "withMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "withoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "linkedWithoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861"
        },
        "inherit": [
          "EIP712Base"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712MetaTxn",
            "src": "contracts/sportsdapp/EIP712MetaTxn.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712MetaTxn",
              "label": "nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/EIP712MetaTxn.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SportsDapp": {
        "version": {
          "withMetadata": "fefae372bc142786836260a63749620362bdea6a9c6fd9993734df496bf05873",
          "withoutMetadata": "fefae372bc142786836260a63749620362bdea6a9c6fd9993734df496bf05873",
          "linkedWithoutMetadata": "fefae372bc142786836260a63749620362bdea6a9c6fd9993734df496bf05873"
        },
        "inherit": [
          "EIP712MetaTxn",
          "EIP712Base",
          "ChainlinkClient",
          "Owned"
        ],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SportsDapp",
            "src": "contracts/sportsdapp/Sportsdapp.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeAddress",
            "src": "contracts/sportsdapp/Sportsdapp.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SportsDapp",
              "label": "feeAddress",
              "type": "t_address_payable",
              "src": "contracts/sportsdapp/Sportsdapp.sol:52"
            },
            {
              "contract": "SportsDapp",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:54"
            },
            {
              "contract": "SportsDapp",
              "label": "questions",
              "type": "t_mapping(t_uint256,t_struct(Question)8477_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:57"
            },
            {
              "contract": "SportsDapp",
              "label": "naam",
              "type": "t_mapping(t_address,t_string_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:59"
            },
            {
              "contract": "SportsDapp",
              "label": "allsubmissions",
              "type": "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8432_storage)dyn_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:63"
            },
            {
              "contract": "SportsDapp",
              "label": "price",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:74"
            },
            {
              "contract": "SportsDapp",
              "label": "oracle",
              "type": "t_address",
              "src": "contracts/sportsdapp/Sportsdapp.sol:76"
            },
            {
              "contract": "SportsDapp",
              "label": "jobId",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/Sportsdapp.sol:77"
            },
            {
              "contract": "SportsDapp",
              "label": "fee",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:78"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Question)8477_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.Question)"
            },
            "t_struct(Question)8477_storage": {
              "label": "struct SportsDapp.Question",
              "members": [
                {
                  "label": "author",
                  "type": "t_address"
                },
                {
                  "label": "_type",
                  "type": "t_uint256"
                },
                {
                  "label": "qcontent",
                  "type": "t_string_storage"
                },
                {
                  "label": "vote_price",
                  "type": "t_uint256"
                },
                {
                  "label": "correct_ans_id",
                  "type": "t_uint256"
                },
                {
                  "label": "options",
                  "type": "t_array(t_struct(Option)8440_storage)6_storage"
                },
                {
                  "label": "totalCount",
                  "type": "t_uint256"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "winnersnames",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "correct_answer_str",
                  "type": "t_string_storage"
                },
                {
                  "label": "correct_ans_reason",
                  "type": "t_string_storage"
                },
                {
                  "label": "distributed_each",
                  "type": "t_uint256"
                },
                {
                  "label": "totalWinners",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint8"
                },
                {
                  "label": "stopped",
                  "type": "t_uint8"
                },
                {
                  "label": "declared_result",
                  "type": "t_uint8"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_struct(Option)8440_storage)6_storage": {
              "label": "struct SportsDapp.Option[6]"
            },
            "t_struct(Option)8440_storage": {
              "label": "struct SportsDapp.Option",
              "members": [
                {
                  "label": "name",
                  "type": "t_uint8"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)"
            },
            "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8432_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.IntegerVoter[])"
            },
            "t_array(t_struct(IntegerVoter)8432_storage)dyn_storage": {
              "label": "struct SportsDapp.IntegerVoter[]"
            },
            "t_struct(IntegerVoter)8432_storage": {
              "label": "struct SportsDapp.IntegerVoter",
              "members": [
                {
                  "label": "add",
                  "type": "t_address"
                },
                {
                  "label": "submittedans",
                  "type": "t_uint256"
                }
              ]
            },
            "t_bytes32": {
              "label": "bytes32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "4c061b5a7770a7233998d2741b342c1a2644bd1a6a502fc76d6972bbd269dda1",
          "withoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2",
          "linkedWithoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)13560",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)5340",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_tokenBalances",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/synthetix/StakingRewards.sol:38"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:40"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:41"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)5154",
              "src": "contracts/synthetix/StakingRewards.sol:43"
            }
          ],
          "types": {
            "t_contract(IERC20)13560": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)5340": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_contract(IERC1155Game)5154": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)13190_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)13190_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)26417_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)13190_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)13190_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)26417_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)13560",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)13560": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)14314",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)14314": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)15228_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)15228_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)15228_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)25529_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)25529_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25264_storage"
                }
              ]
            },
            "t_struct(Set)25264_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)24653_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)24653_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)24653_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)18249",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)18249": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)18262",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)18262": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)20344_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)20344_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)24653_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)20344_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)20344_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)24653_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)21248",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)21248": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)25650_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)25027_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)25650_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)25650_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25264_storage"
                }
              ]
            },
            "t_struct(Set)25264_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)25027_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)24709_storage"
                }
              ]
            },
            "t_struct(Map)24709_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)24701_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)24701_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)24701_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Chainlink": {
        "version": {
          "withMetadata": "7621e9f47d5fe41dbbd12f236f8e06c4c92820e90b4232df6a405c44d58df66c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "CBORChainlink",
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkClient": {
        "version": {
          "withMetadata": "a5d7af034267c878f397ea3aedaed8e10d0e31095c844845c9c64f533f6ecce3",
          "withoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0",
          "linkedWithoutMetadata": "dfb8b1ecd97b636e7369dbdc6bb8369e1c9be60042b3cffbcc042684e07bf3c0"
        },
        "inherit": [],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "requestCount",
            "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ChainlinkClient",
              "label": "ens",
              "type": "t_contract(ENSInterface)831",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:27"
            },
            {
              "contract": "ChainlinkClient",
              "label": "ensNode",
              "type": "t_bytes32",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:28"
            },
            {
              "contract": "ChainlinkClient",
              "label": "link",
              "type": "t_contract(LinkTokenInterface)926",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:29"
            },
            {
              "contract": "ChainlinkClient",
              "label": "oracle",
              "type": "t_contract(ChainlinkRequestInterface)751",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:30"
            },
            {
              "contract": "ChainlinkClient",
              "label": "requestCount",
              "type": "t_uint256",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:31"
            },
            {
              "contract": "ChainlinkClient",
              "label": "pendingRequests",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "@chainlink/contracts/src/v0.7/ChainlinkClient.sol:32"
            }
          ],
          "types": {
            "t_contract(ENSInterface)831": {
              "label": "contract ENSInterface"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_contract(LinkTokenInterface)926": {
              "label": "contract LinkTokenInterface"
            },
            "t_contract(ChainlinkRequestInterface)751": {
              "label": "contract ChainlinkRequestInterface"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkRequestInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LinkTokenInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PointerInterface": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BufferChainlink": {
        "version": {
          "withMetadata": "17d637daefa0c36f259c6f73625d378563b03674675486d91fb55c69e2a78be8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CBORChainlink": {
        "version": {
          "withMetadata": "7e5e7faf0a414b45319c58313db04381dcecf4cf331e417cf4c08a6087847e75",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "BufferChainlink"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ENSResolver": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)2551",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)2551": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "aa4b19eee622d0145f99cdca7d8cafa1d625b207dd0f679844e5670ed2ab7665",
          "withoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b",
          "linkedWithoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)5340",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:15"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)5435)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:22"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:25"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)3065_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:44"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:47"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)3174_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:83"
            }
          ],
          "types": {
            "t_contract(IERC1155)5340": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)5435)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)5435": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)3065_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)3065_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)3174_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)3174_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)5454_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)5454_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)5454_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)26733_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)26733_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)26468_storage"
                }
              ]
            },
            "t_struct(Set)26468_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Base": {
        "version": {
          "withMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "withoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "linkedWithoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712Base",
            "src": "contracts/sportsdapp/EIP712Base.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Base",
              "label": "domainSeperator",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/EIP712Base.sol:16"
            },
            {
              "contract": "EIP712Base",
              "label": "_chainid",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/EIP712Base.sol:18"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EIP712MetaTxn": {
        "version": {
          "withMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "withoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "linkedWithoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861"
        },
        "inherit": [
          "EIP712Base"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712MetaTxn",
            "src": "contracts/sportsdapp/EIP712MetaTxn.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712MetaTxn",
              "label": "nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/EIP712MetaTxn.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SportsDapp": {
        "version": {
          "withMetadata": "0253be13201cabc423ff2092d111c549ffb1f5fceddea47a770708a6564f5ccb",
          "withoutMetadata": "0253be13201cabc423ff2092d111c549ffb1f5fceddea47a770708a6564f5ccb",
          "linkedWithoutMetadata": "0253be13201cabc423ff2092d111c549ffb1f5fceddea47a770708a6564f5ccb"
        },
        "inherit": [
          "EIP712MetaTxn",
          "EIP712Base",
          "ChainlinkClient",
          "Owned"
        ],
        "libraries": [
          "Chainlink"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SportsDapp",
            "src": "contracts/sportsdapp/Sportsdapp.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeAddress",
            "src": "contracts/sportsdapp/Sportsdapp.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SportsDapp",
              "label": "feeAddress",
              "type": "t_address_payable",
              "src": "contracts/sportsdapp/Sportsdapp.sol:52"
            },
            {
              "contract": "SportsDapp",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:54"
            },
            {
              "contract": "SportsDapp",
              "label": "questions",
              "type": "t_mapping(t_uint256,t_struct(Question)8477_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:57"
            },
            {
              "contract": "SportsDapp",
              "label": "naam",
              "type": "t_mapping(t_address,t_string_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:59"
            },
            {
              "contract": "SportsDapp",
              "label": "allsubmissions",
              "type": "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8432_storage)dyn_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:63"
            },
            {
              "contract": "SportsDapp",
              "label": "price",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:74"
            },
            {
              "contract": "SportsDapp",
              "label": "oracle",
              "type": "t_address",
              "src": "contracts/sportsdapp/Sportsdapp.sol:76"
            },
            {
              "contract": "SportsDapp",
              "label": "jobId",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/Sportsdapp.sol:77"
            },
            {
              "contract": "SportsDapp",
              "label": "fee",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/Sportsdapp.sol:78"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Question)8477_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.Question)"
            },
            "t_struct(Question)8477_storage": {
              "label": "struct SportsDapp.Question",
              "members": [
                {
                  "label": "author",
                  "type": "t_address"
                },
                {
                  "label": "_type",
                  "type": "t_uint256"
                },
                {
                  "label": "qcontent",
                  "type": "t_string_storage"
                },
                {
                  "label": "vote_price",
                  "type": "t_uint256"
                },
                {
                  "label": "correct_ans_id",
                  "type": "t_uint256"
                },
                {
                  "label": "options",
                  "type": "t_array(t_struct(Option)8440_storage)6_storage"
                },
                {
                  "label": "totalCount",
                  "type": "t_uint256"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "winnersnames",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "correct_answer_str",
                  "type": "t_string_storage"
                },
                {
                  "label": "correct_ans_reason",
                  "type": "t_string_storage"
                },
                {
                  "label": "distributed_each",
                  "type": "t_uint256"
                },
                {
                  "label": "totalWinners",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint8"
                },
                {
                  "label": "stopped",
                  "type": "t_uint8"
                },
                {
                  "label": "declared_result",
                  "type": "t_uint8"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_struct(Option)8440_storage)6_storage": {
              "label": "struct SportsDapp.Option[6]"
            },
            "t_struct(Option)8440_storage": {
              "label": "struct SportsDapp.Option",
              "members": [
                {
                  "label": "name",
                  "type": "t_uint8"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)"
            },
            "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)8432_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.IntegerVoter[])"
            },
            "t_array(t_struct(IntegerVoter)8432_storage)dyn_storage": {
              "label": "struct SportsDapp.IntegerVoter[]"
            },
            "t_struct(IntegerVoter)8432_storage": {
              "label": "struct SportsDapp.IntegerVoter",
              "members": [
                {
                  "label": "add",
                  "type": "t_address"
                },
                {
                  "label": "submittedans",
                  "type": "t_uint256"
                }
              ]
            },
            "t_bytes32": {
              "label": "bytes32"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "4c061b5a7770a7233998d2741b342c1a2644bd1a6a502fc76d6972bbd269dda1",
          "withoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2",
          "linkedWithoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)13560",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)5340",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_tokenBalances",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/synthetix/StakingRewards.sol:38"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:40"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:41"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)5154",
              "src": "contracts/synthetix/StakingRewards.sol:43"
            }
          ],
          "types": {
            "t_contract(IERC20)13560": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)5340": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_contract(IERC1155Game)5154": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)13190_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)13190_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)26417_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)13190_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)13190_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)26417_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)13560",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)13560": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)14314",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)14314": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)15228_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)15228_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)15228_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)25529_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)25529_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25264_storage"
                }
              ]
            },
            "t_struct(Set)25264_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)24653_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)24653_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)24653_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)18249",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)18249": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)18262",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)18262": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)20344_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)20344_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)24653_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)20344_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)20344_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)24653_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)21248",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)21248": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)25650_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)25027_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)25650_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)25650_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)25264_storage"
                }
              ]
            },
            "t_struct(Set)25264_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)25027_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)24709_storage"
                }
              ]
            },
            "t_struct(Map)24709_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)24701_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)24701_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)24701_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "BaseRelayRecipient": {
        "inherit": [
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "trustedForwarder",
            "src": "contracts/sportsdapp/BaseRelayRecipient.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "BaseRelayRecipient",
              "label": "trustedForwarder",
              "type": "t_address",
              "src": "contracts/sportsdapp/BaseRelayRecipient.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SportsDapp1": {
        "version": {
          "withMetadata": "c1c40db165be59f482480c966b066077aa90c4e9eeaae9e3f04662523687e0f5",
          "withoutMetadata": "fb250dce39ce9dec1257cbddbb7cbda00083d083f5cafddfa22b251ebecd2025",
          "linkedWithoutMetadata": "fb250dce39ce9dec1257cbddbb7cbda00083d083f5cafddfa22b251ebecd2025"
        },
        "inherit": [
          "BaseRelayRecipient",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SportsDapp1",
            "src": "contracts/sportsdapp/Sportsdapp1.sol:72"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeAddress",
            "src": "contracts/sportsdapp/Sportsdapp1.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SportsDapp1",
              "label": "admin",
              "type": "t_address",
              "src": "contracts/sportsdapp/Sportsdapp1.sol:49"
            },
            {
              "contract": "SportsDapp1",
              "label": "feeAddress",
              "type": "t_address_payable",
              "src": "contracts/sportsdapp/Sportsdapp1.sol:50"
            },
            {
              "contract": "SportsDapp1",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/Sportsdapp1.sol:52"
            },
            {
              "contract": "SportsDapp1",
              "label": "questions",
              "type": "t_mapping(t_uint256,t_struct(Question)135_storage)",
              "src": "contracts/sportsdapp/Sportsdapp1.sol:55"
            },
            {
              "contract": "SportsDapp1",
              "label": "naam",
              "type": "t_mapping(t_address,t_string_storage)",
              "src": "contracts/sportsdapp/Sportsdapp1.sol:57"
            },
            {
              "contract": "SportsDapp1",
              "label": "allsubmissions",
              "type": "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)90_storage)dyn_storage)",
              "src": "contracts/sportsdapp/Sportsdapp1.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Question)135_storage)": {
              "label": "mapping(uint256 => struct SportsDapp1.Question)"
            },
            "t_struct(Question)135_storage": {
              "label": "struct SportsDapp1.Question",
              "members": [
                {
                  "label": "author",
                  "type": "t_address"
                },
                {
                  "label": "_type",
                  "type": "t_uint256"
                },
                {
                  "label": "qcontent",
                  "type": "t_string_storage"
                },
                {
                  "label": "vote_price",
                  "type": "t_uint256"
                },
                {
                  "label": "correct_ans_id",
                  "type": "t_uint256"
                },
                {
                  "label": "options",
                  "type": "t_array(t_struct(Option)98_storage)6_storage"
                },
                {
                  "label": "totalCount",
                  "type": "t_uint256"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "winnersnames",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "correct_answer_str",
                  "type": "t_string_storage"
                },
                {
                  "label": "correct_ans_reason",
                  "type": "t_string_storage"
                },
                {
                  "label": "distributed_each",
                  "type": "t_uint256"
                },
                {
                  "label": "totalWinners",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint8"
                },
                {
                  "label": "stopped",
                  "type": "t_uint8"
                },
                {
                  "label": "declared_result",
                  "type": "t_uint8"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_struct(Option)98_storage)6_storage": {
              "label": "struct SportsDapp1.Option[6]"
            },
            "t_struct(Option)98_storage": {
              "label": "struct SportsDapp1.Option",
              "members": [
                {
                  "label": "name",
                  "type": "t_uint8"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)"
            },
            "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)90_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct SportsDapp1.IntegerVoter[])"
            },
            "t_array(t_struct(IntegerVoter)90_storage)dyn_storage": {
              "label": "struct SportsDapp1.IntegerVoter[]"
            },
            "t_struct(IntegerVoter)90_storage": {
              "label": "struct SportsDapp1.IntegerVoter",
              "members": [
                {
                  "label": "add",
                  "type": "t_address"
                },
                {
                  "label": "submittedans",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "BaseRelayRecipient": {
        "inherit": [
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "trustedForwarder",
            "src": "contracts/sportsdapp/BaseRelayRecipient.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "BaseRelayRecipient",
              "label": "trustedForwarder",
              "type": "t_address",
              "src": "contracts/sportsdapp/BaseRelayRecipient.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SportsDapp": {
        "version": {
          "withMetadata": "2f54272bb6cb61f9a1d02600cbeeba36e2ea62f6ddb42cac853ff44d89f26d40",
          "withoutMetadata": "fb250dce39ce9dec1257cbddbb7cbda00083d083f5cafddfa22b251ebecd2025",
          "linkedWithoutMetadata": "fb250dce39ce9dec1257cbddbb7cbda00083d083f5cafddfa22b251ebecd2025"
        },
        "inherit": [
          "BaseRelayRecipient",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SportsDapp",
            "src": "contracts/sportsdapp/Sportsdapp1.sol:72"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeAddress",
            "src": "contracts/sportsdapp/Sportsdapp1.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SportsDapp",
              "label": "admin",
              "type": "t_address",
              "src": "contracts/sportsdapp/Sportsdapp1.sol:49"
            },
            {
              "contract": "SportsDapp",
              "label": "feeAddress",
              "type": "t_address_payable",
              "src": "contracts/sportsdapp/Sportsdapp1.sol:50"
            },
            {
              "contract": "SportsDapp",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/Sportsdapp1.sol:52"
            },
            {
              "contract": "SportsDapp",
              "label": "questions",
              "type": "t_mapping(t_uint256,t_struct(Question)135_storage)",
              "src": "contracts/sportsdapp/Sportsdapp1.sol:55"
            },
            {
              "contract": "SportsDapp",
              "label": "naam",
              "type": "t_mapping(t_address,t_string_storage)",
              "src": "contracts/sportsdapp/Sportsdapp1.sol:57"
            },
            {
              "contract": "SportsDapp",
              "label": "allsubmissions",
              "type": "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)90_storage)dyn_storage)",
              "src": "contracts/sportsdapp/Sportsdapp1.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Question)135_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.Question)"
            },
            "t_struct(Question)135_storage": {
              "label": "struct SportsDapp.Question",
              "members": [
                {
                  "label": "author",
                  "type": "t_address"
                },
                {
                  "label": "_type",
                  "type": "t_uint256"
                },
                {
                  "label": "qcontent",
                  "type": "t_string_storage"
                },
                {
                  "label": "vote_price",
                  "type": "t_uint256"
                },
                {
                  "label": "correct_ans_id",
                  "type": "t_uint256"
                },
                {
                  "label": "options",
                  "type": "t_array(t_struct(Option)98_storage)6_storage"
                },
                {
                  "label": "totalCount",
                  "type": "t_uint256"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "winnersnames",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "correct_answer_str",
                  "type": "t_string_storage"
                },
                {
                  "label": "correct_ans_reason",
                  "type": "t_string_storage"
                },
                {
                  "label": "distributed_each",
                  "type": "t_uint256"
                },
                {
                  "label": "totalWinners",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint8"
                },
                {
                  "label": "stopped",
                  "type": "t_uint8"
                },
                {
                  "label": "declared_result",
                  "type": "t_uint8"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_struct(Option)98_storage)6_storage": {
              "label": "struct SportsDapp.Option[6]"
            },
            "t_struct(Option)98_storage": {
              "label": "struct SportsDapp.Option",
              "members": [
                {
                  "label": "name",
                  "type": "t_uint8"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)"
            },
            "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)90_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.IntegerVoter[])"
            },
            "t_array(t_struct(IntegerVoter)90_storage)dyn_storage": {
              "label": "struct SportsDapp.IntegerVoter[]"
            },
            "t_struct(IntegerVoter)90_storage": {
              "label": "struct SportsDapp.IntegerVoter",
              "members": [
                {
                  "label": "add",
                  "type": "t_address"
                },
                {
                  "label": "submittedans",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)705",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)705": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "aa4b19eee622d0145f99cdca7d8cafa1d625b207dd0f679844e5670ed2ab7665",
          "withoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b",
          "linkedWithoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)3494",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:15"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)3589)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:22"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:25"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)1219_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:44"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:47"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)1328_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:83"
            }
          ],
          "types": {
            "t_contract(IERC1155)3494": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)3589)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)3589": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)1219_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)1219_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)1328_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)1328_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3608_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)3608_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)3608_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)24769_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)24769_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)24504_storage"
                }
              ]
            },
            "t_struct(Set)24504_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Base": {
        "version": {
          "withMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "withoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "linkedWithoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712Base",
            "src": "contracts/sportsdapp/EIP712Base.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Base",
              "label": "domainSeperator",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/EIP712Base.sol:16"
            },
            {
              "contract": "EIP712Base",
              "label": "_chainid",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/EIP712Base.sol:18"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EIP712MetaTxn": {
        "version": {
          "withMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "withoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "linkedWithoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861"
        },
        "inherit": [
          "EIP712Base"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712MetaTxn",
            "src": "contracts/sportsdapp/EIP712MetaTxn.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712MetaTxn",
              "label": "nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/EIP712MetaTxn.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SportsDapp": {
        "version": {
          "withMetadata": "14d61de56cc2a738cb22fe64fe50a3c65ed20c63210c0e83924e8d9361cc6a49",
          "withoutMetadata": "14d61de56cc2a738cb22fe64fe50a3c65ed20c63210c0e83924e8d9361cc6a49",
          "linkedWithoutMetadata": "14d61de56cc2a738cb22fe64fe50a3c65ed20c63210c0e83924e8d9361cc6a49"
        },
        "inherit": [
          "EIP712MetaTxn",
          "EIP712Base",
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SportsDapp",
            "src": "contracts/sportsdapp/Sportsdapp.sol:72"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeAddress",
            "src": "contracts/sportsdapp/Sportsdapp.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SportsDapp",
              "label": "feeAddress",
              "type": "t_address_payable",
              "src": "contracts/sportsdapp/Sportsdapp.sol:50"
            },
            {
              "contract": "SportsDapp",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:52"
            },
            {
              "contract": "SportsDapp",
              "label": "questions",
              "type": "t_mapping(t_uint256,t_struct(Question)6625_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:55"
            },
            {
              "contract": "SportsDapp",
              "label": "naam",
              "type": "t_mapping(t_address,t_string_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:57"
            },
            {
              "contract": "SportsDapp",
              "label": "allsubmissions",
              "type": "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)6580_storage)dyn_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:61"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Question)6625_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.Question)"
            },
            "t_struct(Question)6625_storage": {
              "label": "struct SportsDapp.Question",
              "members": [
                {
                  "label": "author",
                  "type": "t_address"
                },
                {
                  "label": "_type",
                  "type": "t_uint256"
                },
                {
                  "label": "qcontent",
                  "type": "t_string_storage"
                },
                {
                  "label": "vote_price",
                  "type": "t_uint256"
                },
                {
                  "label": "correct_ans_id",
                  "type": "t_uint256"
                },
                {
                  "label": "options",
                  "type": "t_array(t_struct(Option)6588_storage)6_storage"
                },
                {
                  "label": "totalCount",
                  "type": "t_uint256"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "winnersnames",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "correct_answer_str",
                  "type": "t_string_storage"
                },
                {
                  "label": "correct_ans_reason",
                  "type": "t_string_storage"
                },
                {
                  "label": "distributed_each",
                  "type": "t_uint256"
                },
                {
                  "label": "totalWinners",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint8"
                },
                {
                  "label": "stopped",
                  "type": "t_uint8"
                },
                {
                  "label": "declared_result",
                  "type": "t_uint8"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_struct(Option)6588_storage)6_storage": {
              "label": "struct SportsDapp.Option[6]"
            },
            "t_struct(Option)6588_storage": {
              "label": "struct SportsDapp.Option",
              "members": [
                {
                  "label": "name",
                  "type": "t_uint8"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)"
            },
            "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)6580_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.IntegerVoter[])"
            },
            "t_array(t_struct(IntegerVoter)6580_storage)dyn_storage": {
              "label": "struct SportsDapp.IntegerVoter[]"
            },
            "t_struct(IntegerVoter)6580_storage": {
              "label": "struct SportsDapp.IntegerVoter",
              "members": [
                {
                  "label": "add",
                  "type": "t_address"
                },
                {
                  "label": "submittedans",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "4c061b5a7770a7233998d2741b342c1a2644bd1a6a502fc76d6972bbd269dda1",
          "withoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2",
          "linkedWithoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)11596",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)3494",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_tokenBalances",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/synthetix/StakingRewards.sol:38"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:40"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:41"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)3308",
              "src": "contracts/synthetix/StakingRewards.sol:43"
            }
          ],
          "types": {
            "t_contract(IERC20)11596": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)3494": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_contract(IERC1155Game)3308": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)11226_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)11226_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)24453_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)11226_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)11226_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)24453_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)11596",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)11596": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)12350",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)12350": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)13264_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)13264_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)13264_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)23565_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)23565_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)23300_storage"
                }
              ]
            },
            "t_struct(Set)23300_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)22689_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)22689_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)22689_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)16285",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)16285": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)16298",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)16298": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)18380_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)18380_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)22689_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)18380_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)18380_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)22689_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)19284",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)19284": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)23686_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)23063_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)23686_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)23686_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)23300_storage"
                }
              ]
            },
            "t_struct(Set)23300_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)23063_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)22745_storage"
                }
              ]
            },
            "t_struct(Map)22745_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)22737_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)22737_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)22737_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "BaseRelayRecipient": {
        "inherit": [
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "trustedForwarder",
            "src": "contracts/sportsdapp/BaseRelayRecipient.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "BaseRelayRecipient",
              "label": "trustedForwarder",
              "type": "t_address",
              "src": "contracts/sportsdapp/BaseRelayRecipient.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SportsDapp": {
        "version": {
          "withMetadata": "e4d0505089cdf5c434d608b3ef47d01203ff4c7bdab6603cf3c307eb16962623",
          "withoutMetadata": "3dafc9a60da71fa70f9d0e25a7c9245dc765ba8c4800ebcc9c3fd14b2402e716",
          "linkedWithoutMetadata": "3dafc9a60da71fa70f9d0e25a7c9245dc765ba8c4800ebcc9c3fd14b2402e716"
        },
        "inherit": [
          "BaseRelayRecipient",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SportsDapp",
            "src": "contracts/sportsdapp/Sportsdapp.sol:72"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeAddress",
            "src": "contracts/sportsdapp/Sportsdapp.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SportsDapp",
              "label": "admin",
              "type": "t_address",
              "src": "contracts/sportsdapp/Sportsdapp.sol:49"
            },
            {
              "contract": "SportsDapp",
              "label": "feeAddress",
              "type": "t_address_payable",
              "src": "contracts/sportsdapp/Sportsdapp.sol:50"
            },
            {
              "contract": "SportsDapp",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:52"
            },
            {
              "contract": "SportsDapp",
              "label": "questions",
              "type": "t_mapping(t_uint256,t_struct(Question)135_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:55"
            },
            {
              "contract": "SportsDapp",
              "label": "naam",
              "type": "t_mapping(t_address,t_string_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:57"
            },
            {
              "contract": "SportsDapp",
              "label": "allsubmissions",
              "type": "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)90_storage)dyn_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Question)135_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.Question)"
            },
            "t_struct(Question)135_storage": {
              "label": "struct SportsDapp.Question",
              "members": [
                {
                  "label": "author",
                  "type": "t_address"
                },
                {
                  "label": "_type",
                  "type": "t_uint256"
                },
                {
                  "label": "qcontent",
                  "type": "t_string_storage"
                },
                {
                  "label": "vote_price",
                  "type": "t_uint256"
                },
                {
                  "label": "correct_ans_id",
                  "type": "t_uint256"
                },
                {
                  "label": "options",
                  "type": "t_array(t_struct(Option)98_storage)6_storage"
                },
                {
                  "label": "totalCount",
                  "type": "t_uint256"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "winnersnames",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "correct_answer_str",
                  "type": "t_string_storage"
                },
                {
                  "label": "correct_ans_reason",
                  "type": "t_string_storage"
                },
                {
                  "label": "distributed_each",
                  "type": "t_uint256"
                },
                {
                  "label": "totalWinners",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint8"
                },
                {
                  "label": "stopped",
                  "type": "t_uint8"
                },
                {
                  "label": "declared_result",
                  "type": "t_uint8"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_struct(Option)98_storage)6_storage": {
              "label": "struct SportsDapp.Option[6]"
            },
            "t_struct(Option)98_storage": {
              "label": "struct SportsDapp.Option",
              "members": [
                {
                  "label": "name",
                  "type": "t_uint8"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)"
            },
            "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)90_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.IntegerVoter[])"
            },
            "t_array(t_struct(IntegerVoter)90_storage)dyn_storage": {
              "label": "struct SportsDapp.IntegerVoter[]"
            },
            "t_struct(IntegerVoter)90_storage": {
              "label": "struct SportsDapp.IntegerVoter",
              "members": [
                {
                  "label": "add",
                  "type": "t_address"
                },
                {
                  "label": "submittedans",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "BaseRelayRecipient": {
        "inherit": [
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "BaseRelayRecipient",
              "label": "trustedForwarder",
              "type": "t_address",
              "src": "contracts/sportsdapp/BaseRelayRecipient.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SportsDapp": {
        "version": {
          "withMetadata": "26235ec74fdca3038dd26ff4f47bea61f00442b6f0501bea6b082d0996ec3594",
          "withoutMetadata": "019c213f57bd65a70f25e111d0ef773b4a4235e5d4505aff8520da194fb44542",
          "linkedWithoutMetadata": "019c213f57bd65a70f25e111d0ef773b4a4235e5d4505aff8520da194fb44542"
        },
        "inherit": [
          "BaseRelayRecipient",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SportsDapp",
            "src": "contracts/sportsdapp/Sportsdapp.sol:72"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeAddress",
            "src": "contracts/sportsdapp/Sportsdapp.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SportsDapp",
              "label": "admin",
              "type": "t_address",
              "src": "contracts/sportsdapp/Sportsdapp.sol:49"
            },
            {
              "contract": "SportsDapp",
              "label": "feeAddress",
              "type": "t_address_payable",
              "src": "contracts/sportsdapp/Sportsdapp.sol:50"
            },
            {
              "contract": "SportsDapp",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:52"
            },
            {
              "contract": "SportsDapp",
              "label": "questions",
              "type": "t_mapping(t_uint256,t_struct(Question)134_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:55"
            },
            {
              "contract": "SportsDapp",
              "label": "naam",
              "type": "t_mapping(t_address,t_string_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:57"
            },
            {
              "contract": "SportsDapp",
              "label": "allsubmissions",
              "type": "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)89_storage)dyn_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Question)134_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.Question)"
            },
            "t_struct(Question)134_storage": {
              "label": "struct SportsDapp.Question",
              "members": [
                {
                  "label": "author",
                  "type": "t_address"
                },
                {
                  "label": "_type",
                  "type": "t_uint256"
                },
                {
                  "label": "qcontent",
                  "type": "t_string_storage"
                },
                {
                  "label": "vote_price",
                  "type": "t_uint256"
                },
                {
                  "label": "correct_ans_id",
                  "type": "t_uint256"
                },
                {
                  "label": "options",
                  "type": "t_array(t_struct(Option)97_storage)6_storage"
                },
                {
                  "label": "totalCount",
                  "type": "t_uint256"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "winnersnames",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "correct_answer_str",
                  "type": "t_string_storage"
                },
                {
                  "label": "correct_ans_reason",
                  "type": "t_string_storage"
                },
                {
                  "label": "distributed_each",
                  "type": "t_uint256"
                },
                {
                  "label": "totalWinners",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint8"
                },
                {
                  "label": "stopped",
                  "type": "t_uint8"
                },
                {
                  "label": "declared_result",
                  "type": "t_uint8"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_struct(Option)97_storage)6_storage": {
              "label": "struct SportsDapp.Option[6]"
            },
            "t_struct(Option)97_storage": {
              "label": "struct SportsDapp.Option",
              "members": [
                {
                  "label": "name",
                  "type": "t_uint8"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)"
            },
            "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)89_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.IntegerVoter[])"
            },
            "t_array(t_struct(IntegerVoter)89_storage)dyn_storage": {
              "label": "struct SportsDapp.IntegerVoter[]"
            },
            "t_struct(IntegerVoter)89_storage": {
              "label": "struct SportsDapp.IntegerVoter",
              "members": [
                {
                  "label": "add",
                  "type": "t_address"
                },
                {
                  "label": "submittedans",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)705",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)705": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "aa4b19eee622d0145f99cdca7d8cafa1d625b207dd0f679844e5670ed2ab7665",
          "withoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b",
          "linkedWithoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)3494",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:15"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)3589)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:22"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:25"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)1219_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:44"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:47"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)1328_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:83"
            }
          ],
          "types": {
            "t_contract(IERC1155)3494": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)3589)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)3589": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)1219_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)1219_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)1328_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)1328_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3608_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)3608_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)3608_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)24780_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)24780_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)24515_storage"
                }
              ]
            },
            "t_struct(Set)24515_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Base": {
        "version": {
          "withMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "withoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "linkedWithoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712Base",
            "src": "contracts/sportsdapp/EIP712Base.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Base",
              "label": "domainSeperator",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/EIP712Base.sol:16"
            },
            {
              "contract": "EIP712Base",
              "label": "_chainid",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/EIP712Base.sol:18"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EIP712MetaTxn": {
        "version": {
          "withMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "withoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "linkedWithoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861"
        },
        "inherit": [
          "EIP712Base"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712MetaTxn",
            "src": "contracts/sportsdapp/EIP712MetaTxn.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712MetaTxn",
              "label": "nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/EIP712MetaTxn.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SportsDapp": {
        "version": {
          "withMetadata": "81004bc08bf4f5a3f2e02adb6a6521fe84ef41020adac567ef9219fb13da0c8f",
          "withoutMetadata": "81004bc08bf4f5a3f2e02adb6a6521fe84ef41020adac567ef9219fb13da0c8f",
          "linkedWithoutMetadata": "81004bc08bf4f5a3f2e02adb6a6521fe84ef41020adac567ef9219fb13da0c8f"
        },
        "inherit": [
          "EIP712MetaTxn",
          "EIP712Base"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SportsDapp",
            "src": "contracts/sportsdapp/Sportsdapp.sol:72"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeAddress",
            "src": "contracts/sportsdapp/Sportsdapp.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SportsDapp",
              "label": "admin",
              "type": "t_address",
              "src": "contracts/sportsdapp/Sportsdapp.sol:49"
            },
            {
              "contract": "SportsDapp",
              "label": "feeAddress",
              "type": "t_address_payable",
              "src": "contracts/sportsdapp/Sportsdapp.sol:50"
            },
            {
              "contract": "SportsDapp",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:52"
            },
            {
              "contract": "SportsDapp",
              "label": "questions",
              "type": "t_mapping(t_uint256,t_struct(Question)6619_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:55"
            },
            {
              "contract": "SportsDapp",
              "label": "naam",
              "type": "t_mapping(t_address,t_string_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:57"
            },
            {
              "contract": "SportsDapp",
              "label": "allsubmissions",
              "type": "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)6574_storage)dyn_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Question)6619_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.Question)"
            },
            "t_struct(Question)6619_storage": {
              "label": "struct SportsDapp.Question",
              "members": [
                {
                  "label": "author",
                  "type": "t_address"
                },
                {
                  "label": "_type",
                  "type": "t_uint256"
                },
                {
                  "label": "qcontent",
                  "type": "t_string_storage"
                },
                {
                  "label": "vote_price",
                  "type": "t_uint256"
                },
                {
                  "label": "correct_ans_id",
                  "type": "t_uint256"
                },
                {
                  "label": "options",
                  "type": "t_array(t_struct(Option)6582_storage)6_storage"
                },
                {
                  "label": "totalCount",
                  "type": "t_uint256"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "winnersnames",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "correct_answer_str",
                  "type": "t_string_storage"
                },
                {
                  "label": "correct_ans_reason",
                  "type": "t_string_storage"
                },
                {
                  "label": "distributed_each",
                  "type": "t_uint256"
                },
                {
                  "label": "totalWinners",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint8"
                },
                {
                  "label": "stopped",
                  "type": "t_uint8"
                },
                {
                  "label": "declared_result",
                  "type": "t_uint8"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_struct(Option)6582_storage)6_storage": {
              "label": "struct SportsDapp.Option[6]"
            },
            "t_struct(Option)6582_storage": {
              "label": "struct SportsDapp.Option",
              "members": [
                {
                  "label": "name",
                  "type": "t_uint8"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)"
            },
            "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)6574_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.IntegerVoter[])"
            },
            "t_array(t_struct(IntegerVoter)6574_storage)dyn_storage": {
              "label": "struct SportsDapp.IntegerVoter[]"
            },
            "t_struct(IntegerVoter)6574_storage": {
              "label": "struct SportsDapp.IntegerVoter",
              "members": [
                {
                  "label": "add",
                  "type": "t_address"
                },
                {
                  "label": "submittedans",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "4c061b5a7770a7233998d2741b342c1a2644bd1a6a502fc76d6972bbd269dda1",
          "withoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2",
          "linkedWithoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)11607",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)3494",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_tokenBalances",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/synthetix/StakingRewards.sol:38"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:40"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:41"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)3308",
              "src": "contracts/synthetix/StakingRewards.sol:43"
            }
          ],
          "types": {
            "t_contract(IERC20)11607": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)3494": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_contract(IERC1155Game)3308": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)11237_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)11237_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)24464_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)11237_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)11237_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)24464_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)11607",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)11607": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)12361",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)12361": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)13275_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)13275_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)13275_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)23576_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)23576_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)23311_storage"
                }
              ]
            },
            "t_struct(Set)23311_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)22700_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)22700_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)22700_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)16296",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)16296": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)16309",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)16309": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)18391_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)18391_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)22700_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)18391_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)18391_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)22700_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)19295",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)19295": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)23697_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)23074_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)23697_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)23697_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)23311_storage"
                }
              ]
            },
            "t_struct(Set)23311_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)23074_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)22756_storage"
                }
              ]
            },
            "t_struct(Map)22756_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)22748_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)22748_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)22748_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)705",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)705": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "aa4b19eee622d0145f99cdca7d8cafa1d625b207dd0f679844e5670ed2ab7665",
          "withoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b",
          "linkedWithoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)3494",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:15"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)3589)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:22"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:25"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)1219_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:44"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:47"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)1328_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:83"
            }
          ],
          "types": {
            "t_contract(IERC1155)3494": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)3589)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)3589": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)1219_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)1219_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)1328_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)1328_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3608_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)3608_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)3608_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)24780_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)24780_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)24515_storage"
                }
              ]
            },
            "t_struct(Set)24515_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Base": {
        "version": {
          "withMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "withoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0",
          "linkedWithoutMetadata": "836fa00bbbd51eddedc4238ee5e0cbf443b3f134856ea4fa4e347ae15f603ed0"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712Base",
            "src": "contracts/sportsdapp/EIP712Base.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Base",
              "label": "domainSeperator",
              "type": "t_bytes32",
              "src": "contracts/sportsdapp/EIP712Base.sol:16"
            },
            {
              "contract": "EIP712Base",
              "label": "_chainid",
              "type": "t_uint256",
              "src": "contracts/sportsdapp/EIP712Base.sol:18"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EIP712MetaTxn": {
        "version": {
          "withMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "withoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861",
          "linkedWithoutMetadata": "a78511d41489f931be7ee106690a79ed2985f65c51bcfec5703202520be98861"
        },
        "inherit": [
          "EIP712Base"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712MetaTxn",
            "src": "contracts/sportsdapp/EIP712MetaTxn.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EIP712MetaTxn",
              "label": "nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/EIP712MetaTxn.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SportsDapp": {
        "version": {
          "withMetadata": "bad8954d113bba4adf94f063d5169997bca7a6f94f749d7b2e3132848efcd4a3",
          "withoutMetadata": "bad8954d113bba4adf94f063d5169997bca7a6f94f749d7b2e3132848efcd4a3",
          "linkedWithoutMetadata": "bad8954d113bba4adf94f063d5169997bca7a6f94f749d7b2e3132848efcd4a3"
        },
        "inherit": [
          "EIP712MetaTxn",
          "EIP712Base"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SportsDapp",
            "src": "contracts/sportsdapp/Sportsdapp.sol:72"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeAddress",
            "src": "contracts/sportsdapp/Sportsdapp.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SportsDapp",
              "label": "admin",
              "type": "t_address",
              "src": "contracts/sportsdapp/Sportsdapp.sol:49"
            },
            {
              "contract": "SportsDapp",
              "label": "feeAddress",
              "type": "t_address_payable",
              "src": "contracts/sportsdapp/Sportsdapp.sol:50"
            },
            {
              "contract": "SportsDapp",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:52"
            },
            {
              "contract": "SportsDapp",
              "label": "questions",
              "type": "t_mapping(t_uint256,t_struct(Question)6619_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:55"
            },
            {
              "contract": "SportsDapp",
              "label": "naam",
              "type": "t_mapping(t_address,t_string_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:57"
            },
            {
              "contract": "SportsDapp",
              "label": "allsubmissions",
              "type": "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)6574_storage)dyn_storage)",
              "src": "contracts/sportsdapp/Sportsdapp.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Question)6619_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.Question)"
            },
            "t_struct(Question)6619_storage": {
              "label": "struct SportsDapp.Question",
              "members": [
                {
                  "label": "author",
                  "type": "t_address"
                },
                {
                  "label": "_type",
                  "type": "t_uint256"
                },
                {
                  "label": "qcontent",
                  "type": "t_string_storage"
                },
                {
                  "label": "vote_price",
                  "type": "t_uint256"
                },
                {
                  "label": "correct_ans_id",
                  "type": "t_uint256"
                },
                {
                  "label": "options",
                  "type": "t_array(t_struct(Option)6582_storage)6_storage"
                },
                {
                  "label": "totalCount",
                  "type": "t_uint256"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "label": "winnersnames",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "label": "correct_answer_str",
                  "type": "t_string_storage"
                },
                {
                  "label": "correct_ans_reason",
                  "type": "t_string_storage"
                },
                {
                  "label": "distributed_each",
                  "type": "t_uint256"
                },
                {
                  "label": "totalWinners",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint8"
                },
                {
                  "label": "stopped",
                  "type": "t_uint8"
                },
                {
                  "label": "declared_result",
                  "type": "t_uint8"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_struct(Option)6582_storage)6_storage": {
              "label": "struct SportsDapp.Option[6]"
            },
            "t_struct(Option)6582_storage": {
              "label": "struct SportsDapp.Option",
              "members": [
                {
                  "label": "name",
                  "type": "t_uint8"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage"
                }
              ]
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)"
            },
            "t_mapping(t_uint256,t_array(t_struct(IntegerVoter)6574_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct SportsDapp.IntegerVoter[])"
            },
            "t_array(t_struct(IntegerVoter)6574_storage)dyn_storage": {
              "label": "struct SportsDapp.IntegerVoter[]"
            },
            "t_struct(IntegerVoter)6574_storage": {
              "label": "struct SportsDapp.IntegerVoter",
              "members": [
                {
                  "label": "add",
                  "type": "t_address"
                },
                {
                  "label": "submittedans",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "4c061b5a7770a7233998d2741b342c1a2644bd1a6a502fc76d6972bbd269dda1",
          "withoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2",
          "linkedWithoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)11607",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)3494",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_tokenBalances",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/synthetix/StakingRewards.sol:38"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:40"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:41"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)3308",
              "src": "contracts/synthetix/StakingRewards.sol:43"
            }
          ],
          "types": {
            "t_contract(IERC20)11607": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)3494": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_contract(IERC1155Game)3308": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)11237_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)11237_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)24464_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)11237_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)11237_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)24464_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)11607",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)11607": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)12361",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)12361": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)13275_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)13275_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)13275_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)23576_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)23576_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)23311_storage"
                }
              ]
            },
            "t_struct(Set)23311_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)22700_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)22700_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)22700_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)16296",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)16296": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)16309",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)16309": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)18391_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)18391_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)22700_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)18391_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)18391_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)22700_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)19295",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)19295": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)23697_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)23074_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)23697_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)23697_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)23311_storage"
                }
              ]
            },
            "t_struct(Set)23311_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)23074_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)22756_storage"
                }
              ]
            },
            "t_struct(Map)22756_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)22748_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)22748_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)22748_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)705",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)705": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "aa4b19eee622d0145f99cdca7d8cafa1d625b207dd0f679844e5670ed2ab7665",
          "withoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b",
          "linkedWithoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)3494",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:15"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)3589)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:22"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:25"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)1219_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:44"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:47"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)1328_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:83"
            }
          ],
          "types": {
            "t_contract(IERC1155)3494": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)3589)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)3589": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)1219_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)1219_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)1328_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)1328_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3608_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)3608_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)3608_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)23013_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)23013_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)22748_storage"
                }
              ]
            },
            "t_struct(Set)22748_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "4c061b5a7770a7233998d2741b342c1a2644bd1a6a502fc76d6972bbd269dda1",
          "withoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2",
          "linkedWithoutMetadata": "89a378d4ecc6dce6f8e805e909e8101ae791a7eda327d2daa6afb124e8d090e2"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)9840",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)3494",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_tokenBalances",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/synthetix/StakingRewards.sol:38"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:40"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:41"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)3308",
              "src": "contracts/synthetix/StakingRewards.sol:43"
            }
          ],
          "types": {
            "t_contract(IERC20)9840": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)3494": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_contract(IERC1155Game)3308": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)9470_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)9470_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)22697_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)9470_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)9470_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)22697_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)9840",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)9840": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)10594",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)10594": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)11508_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)11508_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)11508_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)21809_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)21809_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)21544_storage"
                }
              ]
            },
            "t_struct(Set)21544_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)20933_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)20933_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)20933_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)14529",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)14529": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)14542",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)14542": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)16624_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)16624_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)20933_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)16624_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)16624_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)20933_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)17528",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)17528": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)21930_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)21307_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)21930_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)21930_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)21544_storage"
                }
              ]
            },
            "t_struct(Set)21544_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)21307_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)20989_storage"
                }
              ]
            },
            "t_struct(Map)20989_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)20981_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)20981_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)20981_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)705",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)705": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "aa4b19eee622d0145f99cdca7d8cafa1d625b207dd0f679844e5670ed2ab7665",
          "withoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b",
          "linkedWithoutMetadata": "8e97b79260623da56785fb6f218b710047a919f55e520e3de2a67dcdf58c7a8b"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)3494",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:15"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)3589)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:22"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:25"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)1219_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:44"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:47"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)1328_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:83"
            }
          ],
          "types": {
            "t_contract(IERC1155)3494": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)3589)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)3589": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)1219_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)1219_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)1328_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)1328_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3608_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)3608_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)3608_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)22914_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)22914_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)22649_storage"
                }
              ]
            },
            "t_struct(Set)22649_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "c247d255516b6162d58dc79bb01b73a0609123f4141f8eb3aa49ee11de255384",
          "withoutMetadata": "15f6a759370c9b2181507a3a63b2628ddee88d3c83bc12f4e349d0fc0639375a",
          "linkedWithoutMetadata": "15f6a759370c9b2181507a3a63b2628ddee88d3c83bc12f4e349d0fc0639375a"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)9741",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)3494",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:36"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:37"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)3308",
              "src": "contracts/synthetix/StakingRewards.sol:39"
            }
          ],
          "types": {
            "t_contract(IERC20)9741": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)3494": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC1155Game)3308": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)9371_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)9371_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)22598_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)9371_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)9371_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)22598_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)9741",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)9741": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)10495",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)10495": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)11409_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)11409_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)11409_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)21710_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)21710_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)21445_storage"
                }
              ]
            },
            "t_struct(Set)21445_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)20834_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)20834_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)20834_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)14430",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)14430": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)14443",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)14443": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)16525_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)16525_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)20834_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)16525_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)16525_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)20834_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)17429",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)17429": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)21831_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)21208_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)21831_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)21831_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)21445_storage"
                }
              ]
            },
            "t_struct(Set)21445_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)21208_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)20890_storage"
                }
              ]
            },
            "t_struct(Map)20890_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)20882_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)20882_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)20882_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)705",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)705": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "e370f0e0c895a7c0faedad3f2754fe027daf4015e90ef4de09a61380f3e36dfb",
          "withoutMetadata": "23a839f88da4955159d90aafb6c08a310a4044038b139206d4f4154608ef465e",
          "linkedWithoutMetadata": "23a839f88da4955159d90aafb6c08a310a4044038b139206d4f4154608ef465e"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)3495",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:15"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)3590)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:22"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:25"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)1219_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:44"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:47"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)1329_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:82"
            }
          ],
          "types": {
            "t_contract(IERC1155)3495": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)3590)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)3590": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)1219_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)1219_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)1329_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)1329_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3609_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)3609_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)3609_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)22915_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)22915_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)22650_storage"
                }
              ]
            },
            "t_struct(Set)22650_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "c247d255516b6162d58dc79bb01b73a0609123f4141f8eb3aa49ee11de255384",
          "withoutMetadata": "15f6a759370c9b2181507a3a63b2628ddee88d3c83bc12f4e349d0fc0639375a",
          "linkedWithoutMetadata": "15f6a759370c9b2181507a3a63b2628ddee88d3c83bc12f4e349d0fc0639375a"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)9742",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)3495",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:36"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:37"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)3309",
              "src": "contracts/synthetix/StakingRewards.sol:39"
            }
          ],
          "types": {
            "t_contract(IERC20)9742": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)3495": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC1155Game)3309": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)9372_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)9372_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)22599_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)9372_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)9372_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)22599_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)9742",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)9742": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)10496",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)10496": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)11410_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)11410_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)11410_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)21711_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)21711_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)21446_storage"
                }
              ]
            },
            "t_struct(Set)21446_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)20835_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)20835_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)20835_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)14431",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)14431": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)14444",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)14444": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)16526_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)16526_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)20835_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)16526_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)16526_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)20835_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)17430",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)17430": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)21832_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)21209_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)21832_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)21832_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)21446_storage"
                }
              ]
            },
            "t_struct(Set)21446_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)21209_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)20891_storage"
                }
              ]
            },
            "t_struct(Map)20891_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)20883_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)20883_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)20883_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)705",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)705": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "eb915f769d2c9ee5f1e8024825f47d914ce8f2202ec03abf64ddeeddc64e0a8f",
          "withoutMetadata": "f6d9d2417efc857884de3be672d3d5454c62445fd85483609fa0fa99732023b4",
          "linkedWithoutMetadata": "f6d9d2417efc857884de3be672d3d5454c62445fd85483609fa0fa99732023b4"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)3494",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:15"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)3589)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:22"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:25"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)1219_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:44"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:47"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)1328_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:82"
            }
          ],
          "types": {
            "t_contract(IERC1155)3494": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)3589)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)3589": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)1219_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)1219_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)1328_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)1328_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3608_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)3608_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)3608_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)22914_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)22914_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)22649_storage"
                }
              ]
            },
            "t_struct(Set)22649_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "c247d255516b6162d58dc79bb01b73a0609123f4141f8eb3aa49ee11de255384",
          "withoutMetadata": "15f6a759370c9b2181507a3a63b2628ddee88d3c83bc12f4e349d0fc0639375a",
          "linkedWithoutMetadata": "15f6a759370c9b2181507a3a63b2628ddee88d3c83bc12f4e349d0fc0639375a"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)9741",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)3494",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:36"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:37"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)3308",
              "src": "contracts/synthetix/StakingRewards.sol:39"
            }
          ],
          "types": {
            "t_contract(IERC20)9741": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)3494": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC1155Game)3308": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)9371_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)9371_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)22598_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)9371_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)9371_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)22598_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)9741",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)9741": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)10495",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)10495": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)11409_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)11409_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)11409_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)21710_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)21710_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)21445_storage"
                }
              ]
            },
            "t_struct(Set)21445_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)20834_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)20834_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)20834_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)14430",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)14430": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)14443",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)14443": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)16525_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)16525_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)20834_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)16525_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)16525_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)20834_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)17429",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)17429": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)21831_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)21208_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)21831_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)21831_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)21445_storage"
                }
              ]
            },
            "t_struct(Set)21445_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)21208_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)20890_storage"
                }
              ]
            },
            "t_struct(Map)20890_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)20882_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)20882_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)20882_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)705",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)705": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "c02132b14c1362eeba5dd00533e19076d2bfc0c8583cd64607612114ab5dfe82",
          "withoutMetadata": "15d62d708f7b0f6bd6362a8e8f098ea82946e2f9fb696c9abc385fdff7484295",
          "linkedWithoutMetadata": "15d62d708f7b0f6bd6362a8e8f098ea82946e2f9fb696c9abc385fdff7484295"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)3489",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:15"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)3584)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:22"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:25"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)1219_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:44"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:47"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)1323_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:82"
            }
          ],
          "types": {
            "t_contract(IERC1155)3489": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)3584)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)3584": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)1219_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)1219_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)1323_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)1323_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3603_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)3603_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)3603_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)22909_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)22909_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)22644_storage"
                }
              ]
            },
            "t_struct(Set)22644_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "c247d255516b6162d58dc79bb01b73a0609123f4141f8eb3aa49ee11de255384",
          "withoutMetadata": "15f6a759370c9b2181507a3a63b2628ddee88d3c83bc12f4e349d0fc0639375a",
          "linkedWithoutMetadata": "15f6a759370c9b2181507a3a63b2628ddee88d3c83bc12f4e349d0fc0639375a"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)9736",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)3489",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:36"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:37"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)3303",
              "src": "contracts/synthetix/StakingRewards.sol:39"
            }
          ],
          "types": {
            "t_contract(IERC20)9736": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)3489": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC1155Game)3303": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)9366_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)9366_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)22593_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)9366_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)9366_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)22593_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)9736",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)9736": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)10490",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)10490": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)11404_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)11404_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)11404_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)21705_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)21705_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)21440_storage"
                }
              ]
            },
            "t_struct(Set)21440_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)20829_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)20829_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)20829_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)14425",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)14425": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)14438",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)14438": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)16520_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)16520_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)20829_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)16520_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)16520_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)20829_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)17424",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)17424": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)21826_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)21203_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)21826_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)21826_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)21440_storage"
                }
              ]
            },
            "t_struct(Set)21440_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)21203_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)20885_storage"
                }
              ]
            },
            "t_struct(Map)20885_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)20877_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)20877_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)20877_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "SafeCastUpgradeable": {
        "version": {
          "withMetadata": "82753b55effc6720a243fb799be311791105b0f5ce9cccd3c24494dbf961fa6f",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Create2Upgradeable": {
        "version": {
          "withMetadata": "5b0950a4ea7c604436749c9ecce0129870004f51d0b08eef08b23b88061228ff",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ClonesUpgradeable": {
        "version": {
          "withMetadata": "45b8464c9b480650f9ae24925d41984b1fb36a35f91975b1b8d3a10e8f71ace9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "SignedSafeMathUpgradeable": {
        "version": {
          "withMetadata": "5286e2c109922ce10912e61097c4139cb8dec116540f4553559c666c034e909c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC165CheckerUpgradeable": {
        "version": {
          "withMetadata": "b85b341382840193a26eae2b4c6a16d6691b613043414f815701bb553504238d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "MerkleProofUpgradeable": {
        "version": {
          "withMetadata": "15cb3622891c2fda4d32ff4064f79e6816559f2ac1cc34055fc0d84ca1af6e62",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)705",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)705": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "version": {
          "withMetadata": "8d84c415f4fb8578aa9f14f33036d2bcd78f9c22933f0aacb29aa982c1893862",
          "withoutMetadata": "1af3dc57e5267bb37d095335250b5fdb14cd1e1ede612c23240292aa49bb25a5",
          "linkedWithoutMetadata": "1af3dc57e5267bb37d095335250b5fdb14cd1e1ede612c23240292aa49bb25a5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "timePeriodBid",
            "src": "contracts/RelatableGameContracts/ERC1155Game.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)3486",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:15"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)3581)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:22"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:25"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)1219_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:44"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:47"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)1320_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:81"
            }
          ],
          "types": {
            "t_contract(IERC1155)3486": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)3581)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)3581": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)1219_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)1219_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)1320_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)1320_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3600_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)3600_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)3600_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)22906_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)22906_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)22641_storage"
                }
              ]
            },
            "t_struct(Set)22641_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "c247d255516b6162d58dc79bb01b73a0609123f4141f8eb3aa49ee11de255384",
          "withoutMetadata": "15f6a759370c9b2181507a3a63b2628ddee88d3c83bc12f4e349d0fc0639375a",
          "linkedWithoutMetadata": "15f6a759370c9b2181507a3a63b2628ddee88d3c83bc12f4e349d0fc0639375a"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)9733",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)3486",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:36"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:37"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)3300",
              "src": "contracts/synthetix/StakingRewards.sol:39"
            }
          ],
          "types": {
            "t_contract(IERC20)9733": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)3486": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC1155Game)3300": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)9363_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)9363_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)22590_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)9363_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)9363_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)22590_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)9733",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)9733": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20FeeUpgradeable": {
        "version": {
          "withMetadata": "373160ebee207af9eb5db753a0592efececf3959e6a3a3544aa1fce3b4ea9350",
          "withoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91",
          "linkedWithoutMetadata": "82fcbd29cfecfc2fb8a019b266c5a98f21a85d3a9616789fa309d65979afdc91"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable",
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20OwnedUpgradeable)10487",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:29"
            },
            {
              "contract": "GSNRecipientERC20FeeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:117"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20OwnedUpgradeable)10487": {
              "label": "contract __unstable__ERC20OwnedUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20OwnedUpgradeable": {
        "version": {
          "withMetadata": "8ace70e8552a4922eed3b115e06defd836f2e18bfb164482d6662edc64eac763",
          "withoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a",
          "linkedWithoutMetadata": "1a0f89237a9dc69e66dccf7262789077dc02ec1696704c78688961d02ddd702a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "__unstable__ERC20OwnedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientERC20FeeUpgradeable.sol:173"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignatureUpgradeable": {
        "version": {
          "withMetadata": "0a858cd9f30a9cfde60a42b353b81738a29c41c18a7a75582eb0355034a4b857",
          "withoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1",
          "linkedWithoutMetadata": "43604fe6fceccd3fcea58fd4f39812dc5c8ab160479a5a729d9105ac10f546a1"
        },
        "inherit": [
          "GSNRecipientUpgradeable",
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:18"
            },
            {
              "contract": "GSNRecipientSignatureUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientSignatureUpgradeable.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "IRelayRecipientUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:31"
            },
            {
              "contract": "GSNRecipientUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/GSN/GSNRecipientUpgradeable.sol:239"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHubUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControlUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "EnumerableSetUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)11401_storage)",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:61"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/AccessControlUpgradeable.sol:225"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)11401_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)11401_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)21702_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)21702_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)21437_storage"
                }
              ]
            },
            "t_struct(Set)21437_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockControllerUpgradeable": {
        "version": {
          "withMetadata": "f3ece84ebf1973afe7f66862fb012b4c15bb2f84a1e3b538c263d4d6f92d64ee",
          "withoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24",
          "linkedWithoutMetadata": "16b9149fe649238115078095aae8169edb7bc42e560206bf1927279bd03f3c24"
        },
        "inherit": [
          "AccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:32"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)48_storage",
              "src": "contracts/upgradablecontracts/access/TimelockControllerUpgradeable.sol:306"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "version": {
          "withMetadata": "d2bcf647a470ab71fe2e442be8a52893b2d06ac3e680b1d9c56521520599bd0a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EIP712Upgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_NAME",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:27"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_HASHED_VERSION",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:28"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/drafts/EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PermitUpgradeable": {
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_struct(Counter)20826_storage)",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:25"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "_PERMIT_TYPEHASH",
              "type": "t_bytes32",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:28"
            },
            {
              "contract": "ERC20PermitUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/drafts/ERC20PermitUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Counter)20826_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Counter)20826_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20PermitUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1820ImplementerUpgradeable": {
        "version": {
          "withMetadata": "d02d054043d158925db47680bba2c386b9bac60fafbab212d72acd426d875bb4",
          "withoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab",
          "linkedWithoutMetadata": "13a0372f9f5b570f70ed60ec43fa52373ce8b9a7f2bc68ecf4e6fda14480daab"
        },
        "inherit": [
          "IERC1820ImplementerUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:25"
            },
            {
              "contract": "ERC1820ImplementerUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/introspection/ERC1820ImplementerUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820ImplementerUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1820RegistryUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MathUpgradeable": {
        "version": {
          "withMetadata": "d489d1a3ddf8db773af230419d1ced6ba81fae2ef2b2f3bce7e9b6928895c93a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "38c4a251bac36c8a44440faadfffad1700388c4a321d81dd2969b838aaf19ba3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitterUpgradeable": {
        "version": {
          "withMetadata": "fb6687da0c8e908c62427561d0963062df2ebfa77a1f42a77a30f8ec998ba0e8",
          "withoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f",
          "linkedWithoutMetadata": "f6af32ccce1590c1e6207933d03c816be178a2a381f158920c11966fd957e99f"
        },
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:30"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:31"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:33"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:34"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:35"
            },
            {
              "contract": "PaymentSplitterUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "contracts/upgradablecontracts/payment/PaymentSplitterUpgradeable.sol:141"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PullPaymentUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PullPaymentUpgradeable",
              "label": "_escrow",
              "type": "t_contract(EscrowUpgradeable)14422",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:27"
            },
            {
              "contract": "PullPaymentUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/PullPaymentUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_contract(EscrowUpgradeable)14422": {
              "label": "contract EscrowUpgradeable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ConditionalEscrowUpgradeable": {
        "inherit": [
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ConditionalEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/ConditionalEscrowUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EscrowUpgradeable": {
        "version": {
          "withMetadata": "8e85a71fa0bbf5a7e07ce3e70c8cab69bf6664f1de411da63a86c36a8b961aef",
          "withoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a",
          "linkedWithoutMetadata": "e85861451ba96535656302927004437b9999818eac156cf3ec00fa4ef0a5f91a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EscrowUpgradeable",
              "label": "_deposits",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:41"
            },
            {
              "contract": "EscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/EscrowUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RefundEscrowUpgradeable": {
        "version": {
          "withMetadata": "22e611de5d84b029d9a0a3d8f67a1cf9324d75bdb2b22c8eb6f7bfbde4e50ea0",
          "withoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb",
          "linkedWithoutMetadata": "ef10c51fdf25e45841ce6f6d33c8c6db3d1c4a5ba5e88e1f41ba37689b7498fb"
        },
        "inherit": [
          "ConditionalEscrowUpgradeable",
          "EscrowUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_state",
              "type": "t_enum(State)14435",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:24"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "_beneficiary",
              "type": "t_address_payable",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:25"
            },
            {
              "contract": "RefundEscrowUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/payment/escrow/RefundEscrowUpgradeable.sol:102"
            }
          ],
          "types": {
            "t_enum(State)14435": {
              "label": "enum RefundEscrowUpgradeable.State",
              "members": [
                "Active",
                "Refunding",
                "Closed"
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155BurnableUpgradeable": {
        "inherit": [
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155BurnableUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155HolderUpgradeable": {
        "version": {
          "withMetadata": "77f736e60e20df3a556366efbadd99556274e781c6296c7d433ca498e94eb755",
          "withoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf",
          "linkedWithoutMetadata": "b1bc0d71a8653e8d4b2db012237f35b61b2e784c066ec506d6af1491d74ca5cf"
        },
        "inherit": [
          "ERC1155ReceiverUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC1155Upgradeable",
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155PausableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155ReceiverUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Upgradeable": {
        "version": {
          "withMetadata": "bbdcc2da9f25fe42a872eb1ee68ac310266b52ab6d7eb9218e199b29e9d61949",
          "withoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d",
          "linkedWithoutMetadata": "263df642f1c4e64795909335f72ff7b9fc7fbc78abfa13de0e58acf3da84dc7d"
        },
        "inherit": [
          "IERC1155MetadataURIUpgradeable",
          "IERC1155Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:27"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:30"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:33"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC1155/ERC1155Upgradeable.sol:421"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURIUpgradeable": {
        "inherit": [
          "IERC1155Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20BurnableUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20BurnableUpgradeable.sol:50"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20CappedUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:14"
            },
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20CappedUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20SnapshotUpgradeable": {
        "inherit": [
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "ArraysUpgradeable",
          "CountersUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)16517_storage)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)16517_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)20826_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
            },
            {
              "contract": "ERC20SnapshotUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)16517_storage)": {
              "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)16517_storage": {
              "label": "struct ERC20SnapshotUpgradeable.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)20826_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "42ec050439fb6f453c03b7fbb88cd35e2c1988e5427c48ef1fe53cf61fe29da5",
          "withoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1",
          "linkedWithoutMetadata": "922eb2c24562e6fc8700766d9bff533b21cc13a1623a26a81e449e6ec4ff62b1"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:45"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/ERC20Upgradeable.sol:312"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20Upgradeable": {
        "version": {
          "withMetadata": "9a3d3f33d1b34ddd333170913e31cfd289e8be404bc27869bd3e0a6a3b62f490",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelockUpgradeable": {
        "version": {
          "withMetadata": "b648ed72757b0a3f406e75dcb0779f16a9f601454588ce8ef8ce67489fe13fad",
          "withoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029",
          "linkedWithoutMetadata": "31d74bcbf248b26378e75834ade3681711ff84db5fbc32a3ca61e1272c002029"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC20Upgradeable)17421",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:19"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:22"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:25"
            },
            {
              "contract": "TokenTimelockUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)47_storage",
              "src": "contracts/upgradablecontracts/token/ERC20/TokenTimelockUpgradeable.sol:72"
            }
          ],
          "types": {
            "t_contract(IERC20Upgradeable)17421": {
              "label": "contract IERC20Upgradeable"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "inherit": [
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721BurnableUpgradeable.sol:34"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721HolderUpgradeable": {
        "version": {
          "withMetadata": "61f76f9bf3ba9dc34b9e90ab462bc38cb157ed79e33eaa0ecf9a18afea436c9c",
          "withoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0",
          "linkedWithoutMetadata": "137df6a6efa04ae24dbffb1da379b99cbf88bb7fa99ca9af2db6ad24197185b0"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721HolderUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721HolderUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721PausableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "version": {
          "withMetadata": "f0c0127f8d3e537b0410003ce3ffcc29c57dfe31883a88b35d555f4f1e6db8a5",
          "withoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456",
          "linkedWithoutMetadata": "b76b3d7e1aff5e12d44d50db343e8e3ca9346fb25d1e68e4d4dffe40fddeb456"
        },
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable",
          "EnumerableMapUpgradeable",
          "StringsUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)21823_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)21200_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC721/ERC721Upgradeable.sol:480"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)21823_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)21823_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)21437_storage"
                }
              ]
            },
            "t_struct(Set)21437_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)21200_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)20882_storage"
                }
              ]
            },
            "t_struct(Map)20882_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)20874_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)20874_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]"
            },
            "t_struct(MapEntry)20874_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC777Upgradeable": {
        "version": {
          "withMetadata": "21630a21c47411ba6783220fece932971be1e99681f8c48fb1ecdcb0424f761f",
          "withoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963",
          "linkedWithoutMetadata": "7b32960865d82da551e5a4aedeb60151ead20e3da48366137ba9edeae28ad963"
        },
        "inherit": [
          "IERC20Upgradeable",
          "IERC777Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC777Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:36"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:38"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:40"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:41"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperatorsArray",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:55"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_defaultOperators",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:58"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_operators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:61"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_revokedDefaultOperators",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:62"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:65"
            },
            {
              "contract": "ERC777Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)41_storage",
              "src": "contracts/upgradablecontracts/token/ERC777/ERC777Upgradeable.sol:515"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC777RecipientUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777SenderUpgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC777Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "dae232b4dfb62e4e5bc50d0a44dd68bcce22037cd1bc47513405526d43a319d2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ArraysUpgradeable": {
        "version": {
          "withMetadata": "d5c2a3e78b253ec244c70fdcb4574243d2ab7f1533425bed4a5522a1374e61d8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "MathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/upgradablecontracts/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "version": {
          "withMetadata": "c63f3c70007c1ee9045f1785f15c585b26de503614dd3a6fea8f586d373be391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMapUpgradeable": {
        "version": {
          "withMetadata": "aec94ae2fe5e5986f6c8a1dc2b8b47c600bde0c7dc557ad63139d659a2a09de4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSetUpgradeable": {
        "version": {
          "withMetadata": "9e01cb62764b9ff4f0ae7759c84bd8a683ac2dc59549c1d124ae498ba1ede997",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "contracts/upgradablecontracts/utils/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "version": {
          "withMetadata": "8f396cc0dee4bb2b50e6281f787a8dc3a79ec163e313b15fa6d2e90012972514",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Strings": {
        "version": {
          "withMetadata": "e5a553e7885672780cf04e54c310ec012bd8fba2d779bfeb88aaaab977d74c88",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "SafeCast": {
        "version": {
          "withMetadata": "4d995db8f9fef5ec8b5c1ddd33e5df525d86579bc906d5d98946aa09e63e2002",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "EnumerableMap": {
        "version": {
          "withMetadata": "4d11777d56dcd625208097c3dacd3803c2b0760e24c3a6bab4b5105a81316883",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Create2": {
        "version": {
          "withMetadata": "18ad49a046740eee65623e6e03310eea5d1e52514afcffbe9e8e9faf5453a318",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Clones": {
        "version": {
          "withMetadata": "d67ce6a90410584d8df7b94ca5d626fdd35af080e3741468b350e8f29bb6c244",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "SignedSafeMath": {
        "version": {
          "withMetadata": "c20ec2c8cbc22253bb33f8d16b253bb35dee07e1873887430b20f8174bfc0758",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IERC1820Registry": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC1820Implementer": {
        "version": {
          "withMetadata": "b727183b2ecdfe805951e2be8ae29ecff89366c502bbadbcfae28afa9c74828b",
          "withoutMetadata": "28bba79feaa51369f1fce54fac166d60a6bb8d5b9800c7fff2e620c9ba6a4dfd",
          "linkedWithoutMetadata": "28bba79feaa51369f1fce54fac166d60a6bb8d5b9800c7fff2e620c9ba6a4dfd"
        },
        "inherit": [
          "IERC1820Implementer"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1820Implementer",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "src": "contracts/introspection/ERC1820Implementer.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1820Implementer": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC165Checker": {
        "version": {
          "withMetadata": "a50c68a15fc83bda48bfb59c3d4e42b0dbfe1c7dfbb9dba22bc2f8a408f47161",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "MerkleProof": {
        "version": {
          "withMetadata": "da027335b85eafa1fc63c7150ba707c46543b8619f86cd61bda53b4b00cf9ed2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "GSNRecipient": {
        "inherit": [
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_relayHub",
            "src": "contracts/GSN/GSNRecipient.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipient",
              "label": "_relayHub",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipient.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientERC20Fee": {
        "version": {
          "withMetadata": "3578a66353907f5c67f33aa92ce4fe6fb75e4635b175e543421d01ffe340cc62",
          "withoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058",
          "linkedWithoutMetadata": "e8b2c9a5d5cd6c16b62ff649c7d20b8ec2fea081933383f5b6ee391f5ff54058"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "SafeERC20",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientERC20Fee",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientERC20Fee",
              "label": "_token",
              "type": "t_contract$___unstable__ERC20Owned)705",
              "src": "contracts/GSN/GSNRecipientERC20Fee.sol:28"
            }
          ],
          "types": {
            "t_contract$___unstable__ERC20Owned)705": {
              "label": "contract __unstable__ERC20Owned"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "__unstable__ERC20Owned": {
        "version": {
          "withMetadata": "25d2a374de3c5ee2489a7cc4b5889bbb176af9dcdeb774b702f6201f47fe573d",
          "withoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a",
          "linkedWithoutMetadata": "cc222a2fe6c98b480ef2b8bddebf1099d150493d09d08a65587ade2f77ab260a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "__unstable__ERC20Owned",
            "src": "contracts/GSN/GSNRecipientERC20Fee.sol:121"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "GSNRecipientSignature": {
        "version": {
          "withMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "withoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91",
          "linkedWithoutMetadata": "429f7b0e82024b4a651ed19b11c623e71a84b2f83d6884d974bc1ea4eec2ff91"
        },
        "inherit": [
          "GSNRecipient",
          "Context",
          "IRelayRecipient"
        ],
        "libraries": [
          "ECDSA"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GSNRecipientSignature",
            "src": "contracts/GSN/GSNRecipientSignature.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "GSNRecipientSignature",
              "label": "_trustedSigner",
              "type": "t_address",
              "src": "contracts/GSN/GSNRecipientSignature.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IRelayHub": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRelayRecipient": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Game": {
        "inherit": [
          "Context",
          "Owned",
          "Initializable"
        ],
        "libraries": [
          "Math",
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "timePeriodBid",
            "src": "contracts/RelatableGameContracts/ERC1155Game.sol:48"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155Game",
              "label": "ERC1155Token",
              "type": "t_contract(IERC1155)3499",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:16"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenNames",
              "type": "t_mapping(t_uint8,t_contract(IERC20)3594)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:23"
            },
            {
              "contract": "ERC1155Game",
              "label": "fixPriceMap",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:26"
            },
            {
              "contract": "ERC1155Game",
              "label": "bidMap",
              "type": "t_mapping(t_uint256,t_struct(Bids)1224_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:45"
            },
            {
              "contract": "ERC1155Game",
              "label": "beneficiary",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:46"
            },
            {
              "contract": "ERC1155Game",
              "label": "timePeriodBid",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:48"
            },
            {
              "contract": "ERC1155Game",
              "label": "tokenType",
              "type": "t_mapping(t_uint256,t_struct(TokenType)1331_storage)",
              "src": "contracts/RelatableGameContracts/ERC1155Game.sol:82"
            }
          ],
          "types": {
            "t_contract(IERC1155)3499": {
              "label": "contract IERC1155"
            },
            "t_mapping(t_uint8,t_contract(IERC20)3594)": {
              "label": "mapping(uint8 => contract IERC20)"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IERC20)3594": {
              "label": "contract IERC20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint8 => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)"
            },
            "t_mapping(t_uint256,t_struct(Bids)1224_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.Bids)"
            },
            "t_struct(Bids)1224_storage": {
              "label": "struct ERC1155Game.Bids",
              "members": [
                {
                  "label": "bidIncrement",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "basePrice",
                  "type": "t_uint256"
                },
                {
                  "label": "canceled",
                  "type": "t_bool"
                },
                {
                  "label": "highestBid",
                  "type": "t_uint256"
                },
                {
                  "label": "highestBidder",
                  "type": "t_address"
                },
                {
                  "label": "fundsByBidder",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "label": "ownerHasWithdrawn",
                  "type": "t_bool"
                },
                {
                  "label": "tokenName",
                  "type": "t_uint8"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenType)1331_storage)": {
              "label": "mapping(uint256 => struct ERC1155Game.TokenType)"
            },
            "t_struct(TokenType)1331_storage": {
              "label": "struct ERC1155Game.TokenType",
              "members": [
                {
                  "label": "_type",
                  "type": "t_uint8"
                },
                {
                  "label": "burnTokenIdRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "burnTokensQtyRequired",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155RG": {
        "version": {
          "withMetadata": "981ec8c98a52cefbe29eb5da33ac61d1b0e92f73e7be6c238875ae6eec139a84",
          "withoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb",
          "linkedWithoutMetadata": "8470c5833b7d1d04939dfdce070cfd875eec485f8858934602c1e7131a9b67fb"
        },
        "inherit": [
          "Owned",
          "ERC1155Pausable",
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155RG",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenID",
            "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155RG",
              "label": "tokenSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:14"
            },
            {
              "contract": "ERC1155RG",
              "label": "_currentTokenID",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:16"
            },
            {
              "contract": "ERC1155RG",
              "label": "GameContract",
              "type": "t_address",
              "src": "contracts/RelatableGameContracts/ERC1155RG.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20RG": {
        "version": {
          "withMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "withoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da",
          "linkedWithoutMetadata": "fd127834bda0fad178f186ca3287d7b3ec3e8b7c94790fffa676d729871965da"
        },
        "inherit": [
          "Pausable",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20RG",
            "src": "contracts/RelatableGameContracts/ERC20RG.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20RG",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:37"
            },
            {
              "contract": "ERC20RG",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:39"
            },
            {
              "contract": "ERC20RG",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:41"
            },
            {
              "contract": "ERC20RG",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:43"
            },
            {
              "contract": "ERC20RG",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:44"
            },
            {
              "contract": "ERC20RG",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RelatableGameContracts/ERC20RG.sol:45"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Game": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AccessControl": {
        "inherit": [
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControl",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3613_storage)",
              "src": "contracts/access/AccessControl.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)3613_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)3613_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)10800_storage"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_struct(AddressSet)10800_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)10535_storage"
                }
              ]
            },
            "t_struct(Set)10535_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "TimelockController": {
        "version": {
          "withMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "withoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd",
          "linkedWithoutMetadata": "74abaf0abe99b31b93c602f25d47d211c4efcc0a1ec2b764f773856456532abd"
        },
        "inherit": [
          "AccessControl",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TimelockController",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/access/TimelockController.sol:31"
            },
            {
              "contract": "TimelockController",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "contracts/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ECDSA": {
        "version": {
          "withMetadata": "87507945cd8965a7391e022c1be76c3034fb01e59ff6d0d59c699d16ad0ba95d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "version": {
          "withMetadata": "703b3e4b6a4a0b6a40f631e1ffea391f6319a7e2d524cef1476587d499f55796",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "ee3ab6a3c873884499d3dca2beea633bf20af229b52b86a859a83bb7182bb6b9",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Mock": {
        "version": {
          "withMetadata": "fc825f0b3c4bf57b57ecd146744a4b6f508be47b910712e165977cb80463be97",
          "withoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b",
          "linkedWithoutMetadata": "eb6570f87a0524e501ca211c15e6fba55da5c0e11ff2c03ef9b0c0e3c2e9a13b"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Mock",
            "src": "contracts/mock/ERC1155Mock.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "version": {
          "withMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "withoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f",
          "linkedWithoutMetadata": "4a99f60ea13c2f6ccd18d8301bc3add85a30bab5f66273f977c8927e06c6c52f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/proxy/BeaconProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "contracts/proxy/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "contracts/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ProxyAdmin": {
        "version": {
          "withMetadata": "0ce835e0dbfe5405e1d5a818e5a41e10685cbd526be4720e210f40661d076109",
          "withoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72",
          "linkedWithoutMetadata": "ed1aee2f0dae262982d214e10fdee51b42af8a6317158eebffb1d3b96186cd72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TransparentUpgradeableProxy": {
        "version": {
          "withMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "withoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c",
          "linkedWithoutMetadata": "4dd875f1a9fda8986f16a2a829734b5343795ce9dfd809d595909e89e7df534c"
        },
        "inherit": [
          "UpgradeableProxy",
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/proxy/TransparentUpgradeableProxy.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "version": {
          "withMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "withoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3",
          "linkedWithoutMetadata": "eded03b871c5fd0d51e6d62fa69570e0d19246bcd76b360c9a78c7f858792fb3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/proxy/UpgradeableBeacon.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/proxy/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableProxy": {
        "version": {
          "withMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "withoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd",
          "linkedWithoutMetadata": "f1e3e8097a42f1ca96728d4c03c2488f884627722805f828f71440dd4f0560bd"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/proxy/UpgradeableProxy.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Owned": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/synthetix/Owned.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Owned",
              "label": "owner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:7"
            },
            {
              "contract": "Owned",
              "label": "nominatedOwner",
              "type": "t_address",
              "src": "contracts/synthetix/Owned.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Pausable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Pausable",
              "label": "_paused",
              "type": "t_bool",
              "src": "contracts/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RewardsDistributionRecipient": {
        "inherit": [
          "Owned"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "RewardsDistributionRecipient",
              "label": "rewardsDistribution",
              "type": "t_address",
              "src": "contracts/synthetix/RewardsDistributionRecipient.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StakingRewards": {
        "version": {
          "withMetadata": "c247d255516b6162d58dc79bb01b73a0609123f4141f8eb3aa49ee11de255384",
          "withoutMetadata": "15f6a759370c9b2181507a3a63b2628ddee88d3c83bc12f4e349d0fc0639375a",
          "linkedWithoutMetadata": "15f6a759370c9b2181507a3a63b2628ddee88d3c83bc12f4e349d0fc0639375a"
        },
        "inherit": [
          "ERC1155Holder",
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165",
          "Context",
          "Pausable",
          "ReentrancyGuard",
          "RewardsDistributionRecipient",
          "Owned",
          "IStakingRewards"
        ],
        "libraries": [
          "SafeMath",
          "Math"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingRewards",
            "src": "contracts/synthetix/StakingRewards.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "periodFinish",
            "src": "contracts/synthetix/StakingRewards.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardRate",
            "src": "contracts/synthetix/StakingRewards.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardsDuration",
            "src": "contracts/synthetix/StakingRewards.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "StakingRewards",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)9746",
              "src": "contracts/synthetix/StakingRewards.sol:25"
            },
            {
              "contract": "StakingRewards",
              "label": "stakingToken",
              "type": "t_contract(IERC1155)3499",
              "src": "contracts/synthetix/StakingRewards.sol:26"
            },
            {
              "contract": "StakingRewards",
              "label": "periodFinish",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:27"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardRate",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:28"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardsDuration",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:29"
            },
            {
              "contract": "StakingRewards",
              "label": "lastUpdateTime",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:30"
            },
            {
              "contract": "StakingRewards",
              "label": "rewardPerTokenStored",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:31"
            },
            {
              "contract": "StakingRewards",
              "label": "userRewardPerTokenPaid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:33"
            },
            {
              "contract": "StakingRewards",
              "label": "rewards",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:34"
            },
            {
              "contract": "StakingRewards",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/synthetix/StakingRewards.sol:36"
            },
            {
              "contract": "StakingRewards",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/synthetix/StakingRewards.sol:37"
            },
            {
              "contract": "StakingRewards",
              "label": "ERC1155Game",
              "type": "t_contract(IERC1155Game)3313",
              "src": "contracts/synthetix/StakingRewards.sol:39"
            }
          ],
          "types": {
            "t_contract(IERC20)9746": {
              "label": "contract IERC20"
            },
            "t_contract(IERC1155)3499": {
              "label": "contract IERC1155"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC1155Game)3313": {
              "label": "contract IERC1155Game"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IStakingRewards": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Burnable": {
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Holder": {
        "version": {
          "withMetadata": "3c14add019087ee6017ba70b29ba0310404b681692ad0a5efaa5a7011c45ed38",
          "withoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865",
          "linkedWithoutMetadata": "62ad26db96cd21883f13a73c28056bf39ba031a2bd834cdd879c33f659b62865"
        },
        "inherit": [
          "ERC1155Receiver",
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Pausable": {
        "inherit": [
          "Pausable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155Receiver": {
        "inherit": [
          "IERC1155Receiver",
          "ERC165",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/token/ERC1155/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "version": {
          "withMetadata": "3a29642d16935ec3687c1f7f1d6277093144a5f9abb8a2c4543d3c852c5a5ffa",
          "withoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393",
          "linkedWithoutMetadata": "c03b6846795d5dd699e34840db588c4efb6b23de48527900501c42f51ca47393"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "contract": "ERC20",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Capped": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/token/ERC20/ERC20Capped.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Capped",
              "label": "_cap",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/ERC20Capped.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Pausable": {
        "inherit": [
          "Pausable",
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Snapshot": {
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Arrays",
          "Counters"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Snapshot",
              "label": "_accountBalanceSnapshots",
              "type": "t_mapping(t_address,t_struct(Snapshots)9376_storage)",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:49"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_totalSupplySnapshots",
              "type": "t_struct(Snapshots)9376_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:50"
            },
            {
              "contract": "ERC20Snapshot",
              "label": "_currentSnapshotId",
              "type": "t_struct(Counter)10484_storage",
              "src": "contracts/token/ERC20/ERC20Snapshot.sol:53"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(Snapshots)9376_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Snapshots)9376_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(Counter)10484_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "bc1ad37aeb07b9ebb112989e8e49ea95f9c556d48e643f65f706c34de296da3b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenTimelock": {
        "version": {
          "withMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "withoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702",
          "linkedWithoutMetadata": "9c7303ac35c0665d7cf41b45f3f8e58bf8f933b101ffb944f98443c206571702"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenTimelock",
              "label": "_token",
              "type": "t_contract(IERC20)9746",
              "src": "contracts/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "contract": "TokenTimelock",
              "label": "_beneficiary",
              "type": "t_address",
              "src": "contracts/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "contract": "TokenTimelock",
              "label": "_releaseTime",
              "type": "t_uint256",
              "src": "contracts/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_contract(IERC20)9746": {
              "label": "contract IERC20"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "0d8bbf42236a49aa3edc39d9d8d4cb4cbc58ec18e7a06a3fc5c1d5b990e44e5e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Arrays": {
        "version": {
          "withMetadata": "a4ab6e26aaa6256d1562654bc932dcff3b611c754981c5a7a5a2ac3ad2b80ff3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Counters": {
        "version": {
          "withMetadata": "ba95216810d1eb2a6bdb08060612dc8f2e97ca1fd61214f0fd70a46d421ea4cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "a883d706099297c0a7863a46d7b0afc8798c742e53448cd26e790e4da152419c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "contracts/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}